{"version":3,"sources":["components/header.js","components/column.js","components/columnlist.js","components/dialogs.js","tools/algorithm.js","tools/parser.js","root.js","serviceWorker.js","index.js"],"names":["Header","props","classes","makeStyles","theme","header","position","top","left","width","height","backgroundColor","palette","primary","main","color","headerLeft","margin","spacing","fontFamily","fontSize","headerRight","right","padding","headerButtonGroup","marginLeft","React","useState","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","event","current","contains","target","Box","className","showOptions","href","style","float","rel","Button","onClick","viewIssues","variant","marginRight","issues","length","state","restart","toggleState","ButtonGroup","ref","save","size","Popper","open","anchorEl","transition","disablePortal","TransitionProps","place","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","MenuItem","component","type","display","onChange","e","import","export","openListManager","Column","paper","marginTop","listName","marginBottom","pencil","cursor","relevantCategories","list","map","student_idx","students","categories","cat","i","filter","TableContainer","Table","TableHead","TableRow","TableCell","name","TableBody","idx","key","Chip","label","editStudent","ColumnList","body","columnContainer","bottom","overflowX","whiteSpace","columnBox","teachers","index","lists","EditStudentDialog","studentNames","x","JSON","parse","stringify","student","setStudent","errorMessage","setErrorMessage","friends","join","mustBeWith","cannotBeWith","dummies","setDummies","handleDummyChange","evt","value","classIdx","setClassIdx","updateStudent","stud","nameError","Object","entries","split","indexOf","trim","invalidIdx","possibleTeachers","updateStudentClassIdx","dummyMarkup","TextField","fullWidth","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","Select","native","FormControl","FormLabel","FormGroup","on","FormControlLabel","control","Checkbox","checked","possible_idx","push","splice","DialogActions","ViewIssuesDialog","maxWidth","issue","message","close","generatePermutation","classSize","copy","rand","a","b","asrc","searchClasses","bsrc","dst","src","studs","console","error","f","min","max","Math","floor","random","obj","relu","cost","determineIssues","severity","reduce","j","numFriends","catMat","_","studentIdx","diff","generateRandomList","numClasses","listIndices","shuffle","lastIndex","k","ceil","slice","App","teacherNames","editingStudent","viMod","numUselessIterations","Promise","resolve","reject","reader","FileReader","onload","result","readAsText","files","filename","data","blob","Blob","elem","document","createElement","window","URL","createObjectURL","download","appendChild","click","removeChild","rows","this","l","row","val","string","downloadFile","fetch","then","response","status","text","promise","parsed","rawDataString","lines","safeSplitComma","inString","items","currentItem","c","parseInt","minStudents","maxStudents","substring","log","n","toLowerCase","parseCSVSpreadsheet","setState","catch","newState","startWorking","stopWorking","worker","intev","setInterval","bind","schedule","permutationSteps","round","pAcceptWorse","perm","iterate","clearInterval","root","fallback","handleFileUpload","dummyFileImport","textDecoration","newClassIdx","Component","withStyles","justifyContent","alignItems","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00b48e04.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Box, ButtonGroup, Popper, Grow, MenuItem, MenuList,\n         Paper, ClickAwayListener, makeStyles } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport default function Header (props) {\n  const classes = makeStyles(theme => ({\n    header: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '50px',\n      backgroundColor: theme.palette.primary.main,\n      color: 'white'\n    },\n    headerLeft: {\n      position: 'absolute',\n      top: 0, left: 0,\n      margin: theme.spacing(1),\n      fontFamily: 'sans-serif',\n      fontSize: '26px'\n    },\n    headerRight: {\n      position: 'absolute',\n      top: 0, right: 0,\n      padding: 6\n    },\n    headerButtonGroup: {\n      marginLeft: theme.spacing(1)\n    }\n  }))();\n\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const handleClose = event => {\n    if (!anchorRef.current || !anchorRef.current.contains(event.target))\n      setMenuOpen(!menuOpen);\n  }\n\n  return (\n<Box className={classes.header}>\n  <Box className={classes.headerLeft}>\n    Class Lists Generator App\n  </Box>\n  {!props.showOptions && (\n    <a href='https://oliverbalfour.github.io/ClassListsGenerator/docs/instructions.html'\n      style={{color:\"white\", fontSize:\"20px\", float: \"right\", fontFamily: \"sans-serif\", margin: \"14px\"}}\n      target=\"_blank\" rel=\"noopener noreferrer\"\n    >Instructions</a>\n  )}\n  { props.showOptions &&\n  <Box className={classes.headerRight}>\n    <Button\n      onClick={props.viewIssues}\n      color='default' variant='contained' style={{marginRight: \"10px\"}}\n    >\n      View issues ({props.issues.length})\n    </Button>\n    {props.state !== 'editing' &&\n      <Button\n        onClick={props.restart}\n        color='default' variant='contained' style={{marginRight: \"10px\"}}\n      >\n        Start over\n      </Button>\n    }\n    {props.state !== 'editing' &&\n      <Button\n        onClick={() => props.toggleState('working')}\n        color='default' variant='contained'\n      >\n        {props.state === 'working' ? 'Pause' : 'Play'}\n      </Button>\n    }\n    <ButtonGroup\n      variant='contained' color='default'\n      className={classes.headerButtonGroup}\n      ref={anchorRef}\n    >\n      <Button onClick={() => props.toggleState('editing')}>\n        {props.state === 'editing' ? 'Done Editing' : 'Edit'}\n      </Button>\n      {props.state !== 'editing' &&\n        <Button onClick={props.save}>Save</Button>\n      }\n      {props.state !== 'editing' &&\n        <Button size=\"small\" onClick={() => setMenuOpen(!menuOpen)}>\n          <MoreHorizIcon />\n        </Button>\n      }\n    </ButtonGroup>\n    <Popper open={menuOpen} anchorEl={anchorRef.current}\n      transition disablePortal>\n      {({ TransitionProps, place }) => (\n        <Grow {...TransitionProps} style={{\n          transformOrigin: place === 'bottom' ? 'center top' : 'center bottom'\n        }}>\n          <Paper>\n            <ClickAwayListener onClickAway={handleClose}>\n              <MenuList id=\"split-button-menu\">\n                <MenuItem component=\"label\">\n                  Import Spreadsheet (CSV)\n                  <input type=\"file\" style={{ display: \"none\" }}\n                    onChange={e => {setMenuOpen(false); props.import(e)}}/>\n                </MenuItem>\n                <MenuItem onClick={()=>{setMenuOpen(false); props.export()}}>\n                  Export Spreadsheet (CSV)\n                </MenuItem>\n                <MenuItem onClick={()=>{\n                  setMenuOpen(false); props.openListManager()\n                }}>\n                  See Saved Class Lists\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  </Box>\n  }\n</Box>\n  );\n}\n","import React from 'react';\nimport {\n  Paper, makeStyles,\n  Table, TableBody, TableCell, TableHead, TableContainer, TableRow,\n  Chip\n} from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\n\nexport default function Column (props) {\n  const classes = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(2),\n      marginTop: '58px', marginRight: theme.spacing(1),\n      fontFamily: 'sans-serif',\n      width: '320px'\n    },\n    listName: {\n      fontSize: '20px',\n      display: 'block',\n      marginBottom: '10px'\n    },\n    className: {\n      margin: 0,\n      fontFamily: 'sans-serif',\n      fontSize: '20px'\n    },\n    pencil: {\n      float: 'right',\n      cursor: 'pointer'\n    }\n  }))();\n\n  // Jagged array of category indices for each student\n  const relevantCategories = props.list.map(student_idx =>\n    props.students[student_idx].categories.map(\n      // category is enabled, and not the first dummy category\n      (cat, i) => cat && i !== 0 ? i : -1\n      // filter out disabled categories\n    ).filter(cat => cat >= 0)\n  );\n\n  return (\n<TableContainer component={Paper} className={classes.paper}>\n  <Table size='small'>\n    <TableHead>\n      <TableRow><TableCell>\n        <h1 className={classes.className}>{props.name}</h1>\n      </TableCell></TableRow>\n    </TableHead>\n    <TableBody>\n      {props.list.map(idx => props.students[idx].name).map((name, idx) => (\n        <TableRow key={idx}>\n          <TableCell>\n            {name} &nbsp;&nbsp;\n            {relevantCategories[idx].map(cat => (\n              <span key={cat}>\n                <Chip label={props.categories[cat]} size='small' />&nbsp;\n              </span>\n            ))}\n            {props.state !== 'editing' ? null : (\n              <CreateIcon className={classes.pencil}\n                onClick={() => props.editStudent(props.list[idx])} />\n            )}\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n</TableContainer>\n  );\n}\n","import React from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Column from './column.js'\n\nexport default function ColumnList (props) {\n  /**\n   * props.teachers :: [name :: String]\n   * props.students :: [{\n     name :: String, categories :: [Bool], friends :: [student index]\n     mustBeWith :: [student index], cannotBeWith :: [student index],\n     possibleTeachers :: [index into teachers]\n   }]\n   * props.categories :: [String]\n   * props.lists :: [[index into students]] where subarrays are teacher indexed\n   */\n  const classes = makeStyles(theme => ({\n    body: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '100%',\n      backgroundColor: '#EEE',\n      margin: 0,\n      display: 'flex'\n    },\n    columnContainer: {\n      position: 'relative',\n      width: '100%',\n      top: 0, bottom: 0,\n      padding: theme.spacing(2),\n      overflowX: 'scroll',\n      whiteSpace: 'nowrap'\n    },\n    columnBox: {\n      position: 'relative',\n      width: '360px',\n      display: 'inline-block',\n      margin: theme.spacing(1),\n      marginTop: 0\n    }\n  }))();\n\n  return (\n<Box className={classes.body}>\n  <Box className={classes.columnContainer}>\n    {props.teachers.map((name, index) => (\n      <Box className={classes.columnBox} key={index}>\n        <Column name={name} list={props.lists[index]}\n          students={props.students} categories={props.categories}\n          state={props.state} editStudent={props.editStudent} />\n      </Box>\n    ))}\n  </Box>\n</Box>\n  );\n}\n","import React from 'react';\nimport {\n  TextField, Dialog, DialogActions, DialogContent, DialogContentText,\n  DialogTitle, Button, FormLabel, FormControl, FormGroup, FormControlLabel,\n  Checkbox, Table, TableBody, TableRow, TableCell, Select\n} from '@material-ui/core';\n\nexport function EditStudentDialog (props) {\n  const studentNames = props.students.map(x=>x.name);\n  /**\n   * props.student_idx :: Int\n   * props.updateStudent :: Student -> void\n   * props.teachers :: [name :: String]\n   * props.students :: [{\n       name :: String, categories :: [Bool], friends :: [student index]\n       mustBeWith :: [student index], cannotBeWith :: [student index],\n       possibleTeachers :: [index into teachers]\n     }]\n   * props.categories :: [String]\n   */\n\n  var [student, setStudent] = React.useState(\n    JSON.parse(JSON.stringify(props.students[props.student_idx]))\n  );\n  var [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  // Note: trims whitespace too\n  const handleChange = key => evt => setStudent({\n    ...student, [key]: evt.target.value.trim()\n  });\n\n  // Use dummy representations of lists of names as checkboxes are a poor choice\n  // for this use case and a dynamic list is a lot of work\n  // TODO: use <Select multiple /> instead https://material-ui.com/components/selects/#multiple-select\n\n  // handle change to 'name 1, name 2, ...' represented as list of\n  // indices into props.students\n  var [dummies, setDummies] = React.useState({\n    friends: student.friends.map(i => studentNames[i]).join(', '),\n    mustBeWith: student.mustBeWith.map(i => studentNames[i]).join(', '),\n    cannotBeWith: student.cannotBeWith.map(i => props.students[i].name).join(', ')\n  });\n  const handleDummyChange = key => evt => setDummies({\n    ...dummies, [key]: evt.target.value\n  });\n  let [classIdx, setClassIdx] = React.useState(props.classIdx);\n  const updateStudent = student => {\n    // Rebase dummy values onto student by parsing CSV strings\n    var stud = {};\n    var nameError = false;\n    for (const [key, value] of Object.entries(dummies)) {\n      if (value === \"\") stud[key] = [];\n      else stud[key] = value.split(\",\").map(x=>studentNames.indexOf(x.trim()));\n      var invalidIdx = stud[key].indexOf(-1);\n      if (invalidIdx !== -1) nameError = value.split(\",\")[invalidIdx];\n    }\n    \n    // Validation\n    if (student.possibleTeachers.length === 0) {\n      setErrorMessage(\"Cannot have zero possible teachers.\");\n    } else if (nameError !== false) {\n      setErrorMessage(\"Invalid name: '\"+nameError+\"'. Make sure spelling is exact and there is one comma between each name.\");\n    } else {\n      for (const [key, value] of Object.entries(stud)) {\n        student[key] = value;\n      }\n      setStudent(student);\n      if (classIdx !== props.classIdx && student !== props.students[props.student_idx])\n        props.updateStudentClassIdx(classIdx);\n      props.updateStudent(student);\n    }\n  }\n  var dummyMarkup = (<>\n  <TextField\n    label=\"Must be with (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.mustBeWith}\n    onChange={handleDummyChange(\"mustBeWith\")}\n    fullWidth\n  />\n  <TextField\n    label=\"Cannot be with (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.cannotBeWith}\n    onChange={handleDummyChange(\"cannotBeWith\")}\n    fullWidth\n  />\n  <TextField\n    label=\"Friends (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.friends}\n    onChange={handleDummyChange(\"friends\")}\n    fullWidth\n  /></>);\n\n  return (\n <Dialog open={true} onClose={()=>{}} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Editing {student.name}</DialogTitle>\n  <DialogContent>\n    <DialogContentText>\n      To force a class change after lists are generated, you must edit a\n      student's parameters.&nbsp;\n      {errorMessage.length === 0 ? null : (\n        <span style={{color:'red'}}>Error: {errorMessage}</span>\n      )}\n    </DialogContentText>\n    <TextField\n      label=\"Name\"\n      variant=\"filled\"\n      value={student.name}\n      onChange={handleChange(\"name\")}\n      fullWidth\n    />\n    <Select\n      native\n      value={props.teachers[classIdx]}\n      onChange={evt => setClassIdx(props.teachers.indexOf(evt.target.value))}\n      fullWidth\n    >\n      {props.teachers.map((name, idx) =>\n        <option value={name} key={idx}>{name}</option>\n      )}\n    </Select>\n    <FormControl component=\"fieldset\" style={{marginTop:\"20px\"}}>\n      <FormLabel component=\"legend\">Categories</FormLabel>\n      <FormGroup>\n        {student.categories.map((on, idx) => (\n          <FormControlLabel\n            control={\n              <Checkbox checked={on} onChange={() => {\n                student.categories[idx] = !student.categories[idx];\n                setStudent({...student});\n              }} />\n            }\n            label={props.categories[idx]} key={idx}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n    <FormControl component=\"fieldset\" style={{marginTop:\"20px\"}}>\n      <FormLabel component=\"legend\">Possible teachers</FormLabel>\n      <FormGroup>\n        {props.teachers.map((name, idx) => (\n          <FormControlLabel\n            control={\n              <Checkbox checked={student.possibleTeachers.indexOf(idx) !== -1}\n                onChange={() => {\n                  const possible_idx = student.possibleTeachers.indexOf(idx);\n                  if (possible_idx === -1) student.possibleTeachers.push(idx);\n                  else student.possibleTeachers.splice(possible_idx, 1);\n                  setStudent({...student});\n                }}\n              />\n            }\n            label={name} key={idx}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n    {dummyMarkup}\n  </DialogContent>\n  <DialogActions>\n    <Button color=\"primary\" onClick={\n      () => updateStudent(props.students[props.student_idx])\n    }>\n      Cancel\n    </Button>\n    <Button onClick={() => updateStudent(student)}\n      color=\"primary\">\n      Update\n    </Button>\n  </DialogActions>\n</Dialog>\n  );\n}\n\nexport function ViewIssuesDialog (props) {\n  return (\n <Dialog open={true} onClose={()=>{}} aria-labelledby=\"form-dialog-title\"\n    fullWidth={true} maxWidth=\"md\">\n  <DialogTitle id=\"form-dialog-title\">Issues with current class list</DialogTitle>\n  <DialogContent>\n    <Table size='small'>\n      <TableBody>\n        {props.issues.map((issue, idx) => (\n          <TableRow key={idx}>\n            <TableCell>\n              {issue.message}\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </DialogContent>\n  <DialogActions>\n    <Button color=\"primary\" onClick={props.close}>\n      Close\n    </Button>\n  </DialogActions>\n</Dialog>\n  );\n}\n","\n// Lists is a jagged array of student indices\n// Class size is [min, max]\n// Students is an array of student objects such that:\n//  friends::[Int] - at least one should be in same class\n//  categories::[Bool] - each boolean category should be roughly evenly distributed\n//  mustBeWith::[Int], cannotBeWith::[Int]\n//  possibleTeachers::[Int]\nexport function iterate (lists, students, classSize, categories, teachers) {\n  // Use a weird mix of hill climbing and simulated annealing optimisation algorithms\n  // Initially we choose the first five moves that reduce cost of up to 100 moves\n  // By the end we string multiple moves together (up to 10 consecutively)\n  // And they can increase cost with a low probability\n  let maxChanges = 5,\n      maxAttemptedChanges = 100,\n      maxPermutationSteps = 5,\n      maxPAcceptWorse = 0.05;\n  for (let i = 0, c = 0; i < maxAttemptedChanges && c < maxChanges; i++) {\n    // if we are 'behind schedule' (not on track to reach c == maxChanges)\n    // then we increase the number of permutation steps\n    // and increase P(accept worse solution)\n    let schedule = relu(i / maxAttemptedChanges - c / maxChanges),\n        permutationSteps = Math.round(1 + schedule * (maxPermutationSteps - 1)),\n        pAcceptWorse = schedule * maxPAcceptWorse;\n    // Generate a new permutation\n    let perm = copy(lists);\n    for (let j = 0; j < permutationSteps; j++)\n      perm = generatePermutation(perm, students, classSize);\n    // Update the lists\n    if (\n      Math.random() < pAcceptWorse\n      || cost(perm,  students, classSize, categories, teachers)\n       < cost(lists, students, classSize, categories, teachers)\n    ) {\n      c++;\n      lists = perm;\n    }\n  }\n  const issues = determineIssues(lists, students, classSize, categories, teachers);\n  return { lists, issues };\n}\n\nfunction generatePermutation(lists, students, classSize) {\n  lists = copy(lists);\n  // Most perms swap students, it's cleaner and there are more possible moves\n  if (rand(0,2) < 1) {\n    // swap two students (class size remains the same)\n    let a = rand(0, students.length),\n        b = rand(0, students.length - 1);\n    if (b === a) b = students.length - 1;\n    let asrc = searchClasses(lists, a),\n        bsrc = searchClasses(lists, b);\n    lists[asrc][lists[asrc].indexOf(a)] = b;\n    lists[bsrc][lists[bsrc].indexOf(b)] = a;\n  } else {\n    // move one student to another class\n    let a = rand(0, students.length),\n        dst = rand(0, lists.length - 1),\n        src = searchClasses(lists, a);\n    if (dst === src) dst = lists.length - 1;\n    lists[src].splice(lists[src].indexOf(a), 1);\n    lists[dst].push(a);\n  }\n\n  // Test that no student is duplicated\n  var studs = {};\n  for (let list of lists)\n    for (let student of list)\n      if (studs[student]) console.error(\"Duplicated student\");\n      else studs[student] = true;\n  \n  return lists;\n}\n\n// random integer in interval [min, max)\nconst rand = (min, max) => Math.floor(Math.random() * (max - min) + min);\n// Deep copy primitive object/array\nconst copy = obj => JSON.parse(JSON.stringify(obj));\nconst relu = x => Math.min(0,x);\n\n// Sum severities of the issues list\nfunction cost (lists, students, classSize, categories, teachers) {\n  return determineIssues(lists, students, classSize, categories, teachers)\n    .map(x => x.severity)\n    .reduce((a,b)=>a+b,0);\n}\n\n// Search a class list for student index x (-1 if not found)\nconst searchClasses = (lists, x) =>\n  lists.map(list => list.indexOf(x) !== -1).indexOf(true);\n\n// determineIssues :: [[Int]], [Student] -> [{severity::Int, message::String}]\n// Creates a list of issues with a list state for 1) display in a modal\n// and 2) optimisation in `iterate`: minimises \\sum_{k\\in issues} k_{severity}\nexport function determineIssues (lists, students, classSize, categories, teachers) {\n  var issues = [];\n  for (let j = 0; j < lists.length; j++) {\n    const list = lists[j];\n    for (let i = 0; i < list.length; i++) {\n      const student = students[list[i]];\n      // Must/cannot be with\n      for (const idx of student.mustBeWith) {\n        if (list.indexOf(idx) === -1)\n          issues.push({severity: 3, message: `${student.name} must be with ${students[idx].name}.`});\n      }\n      for (const idx of student.cannotBeWith) {\n        if (list.indexOf(idx) !== -1)\n          issues.push({severity: 5, message: `${student.name} cannot be with ${students[idx].name}.`});\n      }\n      // Friends\n      let numFriends = 0;\n      for (const idx of student.friends) {\n        if (list.indexOf(idx) !== -1) numFriends ++;\n      }\n      if (numFriends < 1)\n        issues.push({severity: 3, message: `${student.name} is not with any friends.`});\n      // Possible teachers\n      if (student.possibleTeachers.indexOf(j) === -1)\n        issues.push({severity: 5, message: `${student.name} must not be in ${teachers[j]}'s class.`});\n    }\n    // Class size\n    if (list.length < classSize[0]) {\n      const severity = classSize[0] - list.length;\n      issues.push({\n        severity: 8 * severity,\n        message: `${teachers[j]}'s class has ${severity} too few students.`\n      });\n    } else if (list.length > classSize[1]) {\n      const severity = list.length - classSize[1];\n      issues.push({\n        severity: 10 * severity,\n        message: `${teachers[j]}'s class has ${severity} too many students.`\n      });\n    }\n  }\n  // Categories\n  // catMat[categoryIdx][classIdx] is num people with that cat in that class\n  const catMat = categories.map((_, i) => lists.map(\n    // count number of students in list with category i enabled\n    list => list.map(studentIdx => students[studentIdx].categories[i]).reduce((a,b)=>a+b,0)\n  ));\n  for (let i = 0; i < categories.length; i++) {\n    const diff = Math.max(...catMat[i]) - Math.min(...catMat[i]);\n    if ((diff > 1 && i !== 0) || (diff > 3 && i === 0)) { // gender imbalance is less important\n      issues.push({\n        severity: diff,\n        message: `Imbalanced ${categories[i]} category: ${catMat[i]} students per class respectively.`\n      });\n    }\n  }\n\n  return issues;\n}\n","\nexport function parseCSVSpreadsheet (rawDataString) {\n  var lines = rawDataString.split(/[\\r\\n]+/); // split by all 3 line endings\n  while (lines.indexOf(\"\") !== -1) lines.splice(lines.indexOf(\"\"), 1);\n\n  const safeSplitComma = string => {\n    // we can have commas in strings delimited by \"these quotes\"\n    // this works around that\n    var inString = false;\n    var items = [];\n    var currentItem = '';\n    for (let c of string) {\n      if (c === '\"') {\n        inString = !inString;\n        continue;\n      }\n      if (inString || c !== ',') {\n        currentItem += c;\n      } else {\n        items.push(currentItem.trim());\n        currentItem = '';\n      }\n    }\n    items.push(currentItem.trim());\n    return items;\n  }\n\n  var numClasses = parseInt(lines[1].split(\",\")[5]);\n  var minStudents = parseInt(lines[1].split(\",\")[1]);\n  var maxStudents = parseInt(lines[1].split(\",\")[2]);\n\n  var teacherNames = safeSplitComma(lines[1]).slice(8).filter(x=>x.length>0);\n  var categories = [\"Female\", ...safeSplitComma(lines[5]).slice(10)];\n\n  var students = [];\n  var studentNames = lines.slice(6).map(l => l.substring(0, l.indexOf(',')));\n  for (let i = 6; i < lines.length; i++) {\n    var row = safeSplitComma(lines[i]);\n    if (row.length < 10) console.log(\"Is there a / at the end of the URL?\");\n    students.push({\n      name: row[0],\n      categories: [row[1] === \"F\",\n        ...row.slice(10).map(x => x.length > 0)], // list of bools\n      friends: row.slice(2,7).map(name=>studentNames.indexOf(name))\n                .filter(x=>x>=0),\n      mustBeWith: row[8].length === 0 ? []\n        : safeSplitComma(row[8]).map(name=>studentNames.indexOf(name))\n          .filter(x=>x>=0),\n      cannotBeWith: row[7].length === 0 ? []\n        : safeSplitComma(row[7]).map(n=>studentNames.indexOf(n))\n          .filter(x=>x>=0),\n      // indices of teacher names within teacherNames\n      // if ALL, add all indices [0,1,...,numClasses]\n      possibleTeachers: (row[9].toLowerCase() === \"all\"\n                      || row[9].toLowerCase() === \"any\" || row[9] === \"\")\n        ? teacherNames.map((_,i) => i)\n        : safeSplitComma(row[9]).map(name => teacherNames.indexOf(name))\n          .filter(x=>x>=0)\n    });\n  }\n\n  return {\n    numClasses, // teacherNames.length\n    classSize: [minStudents, maxStudents],\n    teacherNames,\n    categories,\n    students,\n    studentNames\n  }\n}\n\nexport function generateRandomList (studentNames, numClasses) {\n  const shuffle = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  };\n  var listIndices = shuffle(studentNames.map((_,i)=>i));\n  var lists = [];\n  var lastIndex = 0;\n  let k = Math.ceil(studentNames.length/numClasses);\n  for (let i = 0; i < numClasses; i++) {\n    lists.push(listIndices.slice(lastIndex, lastIndex + k));\n    lastIndex += k;\n  }\n  return lists;\n}\n","import React from 'react';\nimport { Box, Button, withStyles } from '@material-ui/core';\nimport Header from './components/header.js';\nimport ColumnList from './components/columnlist.js';\nimport { EditStudentDialog, ViewIssuesDialog } from './components/dialogs.js';\nimport { iterate, determineIssues } from './tools/algorithm.js';\nimport { parseCSVSpreadsheet, generateRandomList } from './tools/parser.js';\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    backgroundColor: \"#EEE\",\n  },\n  fallback: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontFamily: 'sans-serif',\n    fontSize: '30px'\n  }\n});\n\nclass App extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      teacherNames: [],\n      lists: [],\n      /* either view, working or editing */\n      state: 'view',\n      // if positive, modal is open with that index student's config\n      editingStudent: -1,\n      issues: [],\n      viMod: false, // view issues modal open\n    };\n    // after 20 iterations which change nothing, pause\n    this.numUselessIterations = 0;\n  }\n  handleFileUpload (evt) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.readAsText(evt.target.files[0]);\n    });\n  }\n  downloadFile (filename, data) {\n    let blob = new Blob([data], {type: 'text/csv'}),\n        elem = document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n  }\n  export (e) {\n    // first we format the data as a matrix of values\n    let rows = [this.state.teacherNames];\n    for (let i = 0; i < Math.max(...this.state.lists.map(l=>l.length)); i++) {\n      const row = [];\n      for (let j = 0; j < this.state.lists.length; j++) {\n        if (i < this.state.lists[j].length)\n          row.push(this.state.students[this.state.lists[j][i]].name);\n        else row.push(\"\");\n      }\n      // add quotes to escape commas in names in case they pop up\n      rows.push(row.map(val => `\"${val}\"`));\n    }\n    // next we turn it to CSV\n    let string = rows.map(row => row.join(\",\")).join(\"\\n\");\n    // finally we download\n    this.downloadFile(\"class_lists.csv\", string);\n  }\n  dummyFileImport () {\n    return new Promise((resolve, reject) =>\n      fetch('./dummy.csv')\n        .then(response => {\n          if (response.status !== 200) reject(response.status);\n          else response.text().then(resolve);\n        })\n    );\n  }\n  import (promise) {\n    promise.then(data => {\n      // This adds numClasses, classSize, teacherNames, categories,\n      //   students, studentNames and lists to the state\n      const parsed = parseCSVSpreadsheet(data);\n      const lists = generateRandomList(\n        parsed.studentNames, parsed.numClasses\n      );\n      const issues = determineIssues(lists, parsed.students, parsed.classSize, parsed.categories, parsed.teacherNames);\n      this.setState({ ...parsed, lists, issues });\n    }).catch(console.log);\n  }\n  toggleState (newState) {\n    if (newState === \"working\" && this.state.state !== \"working\")\n      this.startWorking();\n    else this.stopWorking();\n\n    if (this.state.state !== newState)\n      this.setState({ state: newState });\n    else\n      this.setState({ state: 'import' });\n  }\n  startWorking () {\n    this.worker();\n    this.intev = setInterval(this.worker.bind(this), 500);\n  }\n  worker () {\n    const { lists, issues } = iterate(\n      this.state.lists, this.state.students, this.state.classSize,\n      this.state.categories, this.state.teacherNames\n    );\n    // This assumes all issues are equal; it's a decent approximation\n    if (this.state.issues.length === issues.length)\n      this.numUselessIterations++;\n    else\n      this.numUselessIterations = 0;\n    if (this.numUselessIterations >= 20 || issues.length === 0) {\n      this.toggleState(\"working\");\n      this.numUselessIterations = 0;\n    }\n    this.setState({ lists, issues });\n  }\n  stopWorking () {\n    clearInterval(this.intev);\n  }\n  editStudent (student_idx) {\n    // open modal to edit student information\n    this.setState({editingStudent: student_idx});\n  }\n  render () {\n    const { classes } = this.props;\n    const classIdx = this.state.lists.map(list => list.indexOf(this.state.editingStudent) !== -1).indexOf(true);\n    return (\n      <Box className={classes.root}>\n        {this.state.teacherNames.length ? (\n          <ColumnList\n            teachers={this.state.teacherNames}\n            students={this.state.students}\n            categories={this.state.categories}\n            lists={this.state.lists}\n            state={this.state.state}\n            editStudent={this.editStudent.bind(this)}\n          />\n        ) : (\n          <Box className={classes.fallback}>\n            Please &nbsp;\n            <Button component=\"label\"\n              size='large' color='primary' variant='contained'>\n              import\n              <input type=\"file\" style={{ display: \"none\" }}\n                onChange={e => this.import(this.handleFileUpload(e))}/>\n            </Button>\n            &nbsp; a spreadsheet&nbsp;\n            <span style={{fontSize: \"1rem\"}}>\n              (or&nbsp;\n              <span onClick={()=>this.import(this.dummyFileImport())}\n                style={{color:\"blue\",textDecoration:\"underline\",cursor:\"pointer\"}}>\n                see a demo\n              </span>\n              )\n            </span>\n          </Box>\n        )}\n        <Header\n          import={e => this.import(this.handleFileUpload(e))}\n          export={this.export.bind(this)}\n          openListManager={() => {}}\n          toggleState={this.toggleState.bind(this)}\n          save={() => {}}\n          restart={() => this.setState({ lists: generateRandomList(\n            this.state.studentNames, this.state.numClasses\n          )})}\n          state={this.state.state}\n          showOptions={this.state.teacherNames.length > 0}\n          issues={this.state.issues}\n          viewIssues={() => this.setState({ viMod: !this.state.viMod })}\n        />\n        {this.state.editingStudent < 0 ? null : (\n          <EditStudentDialog student_idx={this.state.editingStudent}\n            teachers={this.state.teacherNames}\n            students={this.state.students}\n            categories={this.state.categories}\n            updateStudent={student => {\n              const students = this.state.students;\n              students[this.state.editingStudent] = student;\n              this.setState({ students, editingStudent: -1,\n                issues: determineIssues(this.state.lists, students, this.state.classSize, this.state.categories, this.state.teacherNames) });\n            }}\n            classIdx={classIdx}\n            updateStudentClassIdx={newClassIdx => {\n              this.state.lists[classIdx].splice(this.state.lists[classIdx].indexOf(this.state.editingStudent), 1);\n              this.state.lists[newClassIdx].push(this.state.editingStudent);\n              this.setState({ lists: this.state.lists });\n            }}\n          />\n        )}\n        {!this.state.viMod ? null : (\n          <ViewIssuesDialog issues={this.state.issues}\n            close={() => this.setState({ viMod: !this.state.viMod })} />\n        )}\n      </Box>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// Progressive web app stuff (read https://bit.ly/CRA-PWA)\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}