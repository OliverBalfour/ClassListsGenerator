{"version":3,"sources":["components/header.js","components/column.js","components/columnlist.js","root.js","serviceWorker.js","index.js"],"names":["Header","props","classes","makeStyles","theme","header","position","top","left","width","height","backgroundColor","palette","primary","main","color","headerLeft","margin","spacing","fontFamily","fontSize","headerRight","right","padding","headerButtonGroup","marginLeft","React","useState","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","event","current","contains","target","Box","className","showOptions","state","ButtonGroup","variant","Button","onClick","restart","toggleState","ref","save","size","Popper","open","anchorEl","transition","disablePortal","TransitionProps","place","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","MenuItem","import","export","openListManager","Column","paper","marginTop","marginRight","listName","display","marginBottom","list","name","ColumnList","body","columnContainer","bottom","overflowX","whiteSpace","columnBox","lists","map","index","key","App","require","this","setState","newState","root","length","fallback","bind","Component","withStyles","justifyContent","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e71e459c.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Box, ButtonGroup, Popper, Grow, MenuItem, MenuList,\n         Paper, ClickAwayListener, makeStyles } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport default function Header (props) {\n  const classes = makeStyles(theme => ({\n    header: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '50px',\n      backgroundColor: theme.palette.primary.main,\n      color: 'white'\n    },\n    headerLeft: {\n      position: 'absolute',\n      top: 0, left: 0,\n      margin: theme.spacing(1),\n      fontFamily: 'sans-serif',\n      fontSize: '26px'\n    },\n    headerRight: {\n      position: 'absolute',\n      top: 0, right: 0,\n      padding: 6\n    },\n    headerButtonGroup: {\n      marginLeft: theme.spacing(1)\n    }\n  }))();\n\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const handleClose = event => {\n    if (!anchorRef.current || !anchorRef.current.contains(event.target))\n      setMenuOpen(!menuOpen);\n  }\n\n  return (\n<Box className={classes.header}>\n  <Box className={classes.headerLeft}>\n    Class Lists Generator App\n  </Box>\n  { props.showOptions &&\n  <Box className={classes.headerRight}>\n    {props.state !== 'editing' &&\n      <ButtonGroup\n        variant='contained' color='default'\n        className={classes.headerButtonGroup}\n      >\n        <Button onClick={props.restart}>Start over</Button>\n        <Button onClick={() => props.toggleState('working')}>\n          {props.state === 'working' ? 'Pause' : 'Keep working'}\n        </Button>\n      </ButtonGroup>\n    }\n    <ButtonGroup\n      variant='contained' color='default'\n      className={classes.headerButtonGroup}\n      ref={anchorRef}\n    >\n      <Button onClick={() => props.toggleState('editing')}>\n        {props.state === 'editing' ? 'Done Editing' : 'Edit'}\n      </Button>\n      {props.state !== 'editing' &&\n        <Button onClick={props.save}>Save</Button>\n      }\n      {props.state !== 'editing' &&\n        <Button size=\"small\" onClick={() => setMenuOpen(!menuOpen)}>\n          <MoreHorizIcon />\n        </Button>\n      }\n    </ButtonGroup>\n    <Popper open={menuOpen} anchorEl={anchorRef.current}\n      transition disablePortal>\n      {({ TransitionProps, place }) => (\n        <Grow {...TransitionProps} style={{\n          transformOrigin: place === 'bottom' ? 'center top' : 'center bottom'\n        }}>\n          <Paper>\n            <ClickAwayListener onClickAway={handleClose}>\n              <MenuList id=\"split-button-menu\">\n                <MenuItem onClick={()=>{setMenuOpen(false); props.import()}}>\n                  Import Spreadsheet (CSV)\n                </MenuItem>\n                <MenuItem onClick={()=>{setMenuOpen(false); props.export()}}>\n                  Export Spreadsheet (CSV)\n                </MenuItem>\n                <MenuItem onClick={()=>{\n                  setMenuOpen(false); props.openListManager()\n                }}>\n                  See Saved Class Lists\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  </Box>\n  }\n</Box>\n  );\n}\n","import React from 'react';\nimport { Button, Paper, makeStyles } from '@material-ui/core';\n\nexport default function Column (props) {\n  const classes = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(2),\n      marginTop: '58px', marginRight: theme.spacing(1),\n      fontFamily: 'sans-serif'\n    },\n    listName: {\n      fontSize: '20px',\n      display: 'block',\n      marginBottom: '10px'\n    }\n  }))();\n\n  return (\n<Paper className={classes.paper}>\n  <span className={classes.listName}>{props.list.name}</span>\n  <Button variant='contained' color='primary'>Test</Button>\n</Paper>\n  );\n}\n","import React from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Column from './column.js'\n\nexport default function ColumnList (props) {\n  const classes = makeStyles(theme => ({\n    body: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '100%',\n      backgroundColor: '#EEE',\n      margin: 0,\n      display: 'flex'\n    },\n    columnContainer: {\n      position: 'relative',\n      width: '100%',\n      top: 0, bottom: 0,\n      padding: theme.spacing(2),\n      overflowX: 'scroll',\n      whiteSpace: 'nowrap'\n    },\n    columnBox: {\n      position: 'relative',\n      width: '20%',\n      display: 'inline-block',\n      margin: theme.spacing(1),\n      marginTop: 0\n    }\n  }))();\n\n  return (\n<Box className={classes.body}>\n  <Box className={classes.columnContainer}>\n    {props.lists.map((list, index) => (\n      <Box className={classes.columnBox} key={index}>\n        <Column list={list} />\n      </Box>\n    ))}\n  </Box>\n</Box>\n  );\n}\n","import React from 'react';\nimport { Box, Button, withStyles } from '@material-ui/core';\nimport Header from './components/header.js'\nimport ColumnList from './components/columnlist.js'\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    backgroundColor: \"#EEE\",\n  },\n  fallback: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontFamily: 'sans-serif',\n    fontSize: '30px'\n  }\n});\n\nclass App extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      lists: [],\n      state: 'view', /* either view, working or editing */\n    };\n  }\n  import () {\n    // Insert dummy values for now\n    const lists = require('./data/dummy.json');\n    this.setState({ lists: lists });\n  }\n  toggleState (newState) {\n    if (this.state.state !== newState)\n      this.setState({ state: newState });\n    else\n      this.setState({ state: 'import' });\n  }\n  render () {\n    const { classes } = this.props;\n    return (\n      <Box className={classes.root}>\n        {this.state.lists.length ? (\n          <ColumnList\n            lists={this.state.lists}\n          />\n        ) : (\n          <Box className={classes.fallback}>\n            Please &nbsp;\n            <Button onClick={this.import.bind(this)}\n              size='large' color='primary' variant='contained'>\n              import\n            </Button>\n            &nbsp; a spreadsheet\n          </Box>\n        )}\n        <Header\n          import={this.import.bind(this)}\n          export={() => {}}\n          openListManager={() => {}}\n          toggleState={this.toggleState.bind(this)}\n          save={() => {}}\n          restart={() => {}}\n          state={this.state.state}\n          showOptions={this.state.lists.length > 0}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// Progressive web app stuff (read https://bit.ly/CRA-PWA)\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}