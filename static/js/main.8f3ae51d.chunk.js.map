{"version":3,"sources":["components/header.js","components/column.js","components/columnlist.js","components/dialogs.js","tools/algorithm.js","tools/parser.js","root.js","serviceWorker.js","index.js"],"names":["Header","props","classes","makeStyles","theme","header","position","top","left","width","height","backgroundColor","palette","primary","main","color","headerLeft","margin","spacing","fontFamily","fontSize","headerRight","right","padding","headerButtonGroup","marginLeft","React","useState","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","event","current","contains","target","Box","className","showOptions","Button","onClick","viewIssues","variant","issues","length","state","ButtonGroup","restart","toggleState","ref","save","size","Popper","open","anchorEl","transition","disablePortal","TransitionProps","place","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","MenuItem","import","export","openListManager","Column","paper","marginTop","marginRight","listName","display","marginBottom","pencil","float","cursor","relevantCategories","list","map","student_idx","students","categories","cat","i","filter","TableContainer","component","Table","TableHead","TableRow","TableCell","name","TableBody","idx","key","Chip","label","editStudent","ColumnList","body","columnContainer","bottom","overflowX","whiteSpace","columnBox","teachers","index","lists","EditStudentDialog","studentNames","x","JSON","parse","stringify","student","setStudent","errorMessage","setErrorMessage","friends","join","mustBeWith","cannotBeWith","dummies","setDummies","handleDummyChange","evt","value","classIdx","setClassIdx","updateStudent","stud","nameError","Object","entries","split","indexOf","trim","invalidIdx","possibleTeachers","updateStudentClassIdx","dummyMarkup","TextField","onChange","fullWidth","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","Select","native","FormControl","FormLabel","FormGroup","on","FormControlLabel","control","Checkbox","checked","possible_idx","push","splice","DialogActions","ViewIssuesDialog","maxWidth","issue","message","close","generatePermutation","classSize","copy","a","rand","b","min","max","Math","floor","random","obj","cost","determineIssues","severity","reduce","j","numFriends","generateRandomList","numClasses","listIndices","shuffle","_","lastIndex","k","ceil","slice","App","teacherNames","editingStudent","viMod","fetch","then","response","status","console","error","text","data","parsed","rawDataString","lines","safeSplitComma","string","inString","items","currentItem","c","parseInt","minStudents","maxStudents","l","substring","row","log","n","toLowerCase","parseCSVSpreadsheet","setState","catch","newState","this","startWorking","stopWorking","worker","intev","setInterval","bind","numMoves","perm","iterate","clearInterval","root","fallback","newClassIdx","Component","withStyles","justifyContent","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f3ae51d.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Box, ButtonGroup, Popper, Grow, MenuItem, MenuList,\n         Paper, ClickAwayListener, makeStyles } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport default function Header (props) {\n  const classes = makeStyles(theme => ({\n    header: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '50px',\n      backgroundColor: theme.palette.primary.main,\n      color: 'white'\n    },\n    headerLeft: {\n      position: 'absolute',\n      top: 0, left: 0,\n      margin: theme.spacing(1),\n      fontFamily: 'sans-serif',\n      fontSize: '26px'\n    },\n    headerRight: {\n      position: 'absolute',\n      top: 0, right: 0,\n      padding: 6\n    },\n    headerButtonGroup: {\n      marginLeft: theme.spacing(1)\n    }\n  }))();\n\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const handleClose = event => {\n    if (!anchorRef.current || !anchorRef.current.contains(event.target))\n      setMenuOpen(!menuOpen);\n  }\n\n  return (\n<Box className={classes.header}>\n  <Box className={classes.headerLeft}>\n    Class Lists Generator App\n  </Box>\n  { props.showOptions &&\n  <Box className={classes.headerRight}>\n    <Button onClick={props.viewIssues} color='default' variant='contained'>\n      View issues ({props.issues.length})\n    </Button>\n    {props.state !== 'editing' &&\n      <ButtonGroup\n        variant='contained' color='default'\n        className={classes.headerButtonGroup}\n      >\n        <Button onClick={props.restart}>Start over</Button>\n        <Button onClick={() => props.toggleState('working')}>\n          {props.state === 'working' ? 'Pause' : 'Keep working'}\n        </Button>\n      </ButtonGroup>\n    }\n    <ButtonGroup\n      variant='contained' color='default'\n      className={classes.headerButtonGroup}\n      ref={anchorRef}\n    >\n      <Button onClick={() => props.toggleState('editing')}>\n        {props.state === 'editing' ? 'Done Editing' : 'Edit'}\n      </Button>\n      {props.state !== 'editing' &&\n        <Button onClick={props.save}>Save</Button>\n      }\n      {props.state !== 'editing' &&\n        <Button size=\"small\" onClick={() => setMenuOpen(!menuOpen)}>\n          <MoreHorizIcon />\n        </Button>\n      }\n    </ButtonGroup>\n    <Popper open={menuOpen} anchorEl={anchorRef.current}\n      transition disablePortal>\n      {({ TransitionProps, place }) => (\n        <Grow {...TransitionProps} style={{\n          transformOrigin: place === 'bottom' ? 'center top' : 'center bottom'\n        }}>\n          <Paper>\n            <ClickAwayListener onClickAway={handleClose}>\n              <MenuList id=\"split-button-menu\">\n                <MenuItem onClick={()=>{setMenuOpen(false); props.import()}}>\n                  Import Spreadsheet (CSV)\n                </MenuItem>\n                <MenuItem onClick={()=>{setMenuOpen(false); props.export()}}>\n                  Export Spreadsheet (CSV)\n                </MenuItem>\n                <MenuItem onClick={()=>{\n                  setMenuOpen(false); props.openListManager()\n                }}>\n                  See Saved Class Lists\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  </Box>\n  }\n</Box>\n  );\n}\n","import React from 'react';\nimport {\n  Paper, makeStyles,\n  Table, TableBody, TableCell, TableHead, TableContainer, TableRow,\n  Chip\n} from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\n\nexport default function Column (props) {\n  const classes = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(2),\n      marginTop: '58px', marginRight: theme.spacing(1),\n      fontFamily: 'sans-serif',\n      width: '320px'\n    },\n    listName: {\n      fontSize: '20px',\n      display: 'block',\n      marginBottom: '10px'\n    },\n    className: {\n      margin: 0,\n      fontFamily: 'sans-serif',\n      fontSize: '20px'\n    },\n    pencil: {\n      float: 'right',\n      cursor: 'pointer'\n    }\n  }))();\n\n  // Jagged array of category indices for each student\n  const relevantCategories = props.list.map(student_idx =>\n    props.students[student_idx].categories.map(\n      // category is enabled, and not the first dummy category\n      (cat, i) => cat && i !== 0 ? i : -1\n      // filter out disabled categories\n    ).filter(cat => cat >= 0)\n  );\n\n  return (\n<TableContainer component={Paper} className={classes.paper}>\n  <Table size='small'>\n    <TableHead>\n      <TableRow><TableCell>\n        <h1 className={classes.className}>{props.name}</h1>\n      </TableCell></TableRow>\n    </TableHead>\n    <TableBody>\n      {props.list.map(idx => props.students[idx].name).map((name, idx) => (\n        <TableRow key={idx}>\n          <TableCell>\n            {name} &nbsp;&nbsp;\n            {relevantCategories[idx].map(cat => (\n              <span key={cat}>\n                <Chip label={props.categories[cat]} size='small' />&nbsp;\n              </span>\n            ))}\n            {props.state !== 'editing' ? null : (\n              <CreateIcon className={classes.pencil}\n                onClick={() => props.editStudent(props.list[idx])} />\n            )}\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n</TableContainer>\n  );\n}\n","import React from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Column from './column.js'\n\nexport default function ColumnList (props) {\n  /**\n   * props.teachers :: [name :: String]\n   * props.students :: [{\n     name :: String, categories :: [Bool], friends :: [student index]\n     mustBeWith :: [student index], cannotBeWith :: [student index],\n     possibleTeachers :: [index into teachers]\n   }]\n   * props.categories :: [String]\n   * props.lists :: [[index into students]] where subarrays are teacher indexed\n   */\n  const classes = makeStyles(theme => ({\n    body: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '100%',\n      backgroundColor: '#EEE',\n      margin: 0,\n      display: 'flex'\n    },\n    columnContainer: {\n      position: 'relative',\n      width: '100%',\n      top: 0, bottom: 0,\n      padding: theme.spacing(2),\n      overflowX: 'scroll',\n      whiteSpace: 'nowrap'\n    },\n    columnBox: {\n      position: 'relative',\n      width: '360px',\n      display: 'inline-block',\n      margin: theme.spacing(1),\n      marginTop: 0\n    }\n  }))();\n\n  return (\n<Box className={classes.body}>\n  <Box className={classes.columnContainer}>\n    {props.teachers.map((name, index) => (\n      <Box className={classes.columnBox} key={index}>\n        <Column name={name} list={props.lists[index]}\n          students={props.students} categories={props.categories}\n          state={props.state} editStudent={props.editStudent} />\n      </Box>\n    ))}\n  </Box>\n</Box>\n  );\n}\n","import React from 'react';\nimport {\n  TextField, Dialog, DialogActions, DialogContent, DialogContentText,\n  DialogTitle, Button, FormLabel, FormControl, FormGroup, FormControlLabel,\n  Checkbox, Table, TableBody, TableRow, TableCell, Select\n} from '@material-ui/core';\n\nexport function EditStudentDialog (props) {\n  const studentNames = props.students.map(x=>x.name);\n  /**\n   * props.student_idx :: Int\n   * props.updateStudent :: Student -> void\n   * props.teachers :: [name :: String]\n   * props.students :: [{\n       name :: String, categories :: [Bool], friends :: [student index]\n       mustBeWith :: [student index], cannotBeWith :: [student index],\n       possibleTeachers :: [index into teachers]\n     }]\n   * props.categories :: [String]\n   */\n\n  var [student, setStudent] = React.useState(\n    JSON.parse(JSON.stringify(props.students[props.student_idx]))\n  );\n  var [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  // Note: trims whitespace too\n  const handleChange = key => evt => setStudent({\n    ...student, [key]: evt.target.value.trim()\n  });\n\n  // Use dummy representations of lists of names as checkboxes are a poor choice\n  // for this use case and a dynamic list is a lot of work\n  // TODO: use <Select multiple /> instead https://material-ui.com/components/selects/#multiple-select\n\n  // handle change to 'name 1, name 2, ...' represented as list of\n  // indices into props.students\n  var [dummies, setDummies] = React.useState({\n    friends: student.friends.map(i => studentNames[i]).join(', '),\n    mustBeWith: student.mustBeWith.map(i => studentNames[i]).join(', '),\n    cannotBeWith: student.cannotBeWith.map(i => props.students[i].name).join(', ')\n  });\n  const handleDummyChange = key => evt => setDummies({\n    ...dummies, [key]: evt.target.value\n  });\n  let [classIdx, setClassIdx] = React.useState(props.classIdx);\n  const updateStudent = student => {\n    // Rebase dummy values onto student by parsing CSV strings\n    var stud = {};\n    var nameError = false;\n    for (const [key, value] of Object.entries(dummies)) {\n      if (value === \"\") stud[key] = [];\n      else stud[key] = value.split(\",\").map(x=>studentNames.indexOf(x.trim()));\n      var invalidIdx = stud[key].indexOf(-1);\n      if (invalidIdx !== -1) nameError = value.split(\",\")[invalidIdx];\n    }\n    \n    // Validation\n    if (student.possibleTeachers.length === 0) {\n      setErrorMessage(\"Cannot have zero possible teachers.\");\n    } else if (nameError !== false) {\n      setErrorMessage(\"Invalid name: '\"+nameError+\"'. Make sure spelling is exact and there is one comma between each name.\");\n    } else {\n      for (const [key, value] of Object.entries(stud)) {\n        student[key] = value;\n      }\n      setStudent(student);\n      if (classIdx !== props.classIdx && student !== props.students[props.student_idx])\n        props.updateStudentClassIdx(classIdx);\n      props.updateStudent(student);\n    }\n  }\n  var dummyMarkup = (<>\n  <TextField\n    label=\"Must be with (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.mustBeWith}\n    onChange={handleDummyChange(\"mustBeWith\")}\n    fullWidth\n  />\n  <TextField\n    label=\"Cannot be with (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.cannotBeWith}\n    onChange={handleDummyChange(\"cannotBeWith\")}\n    fullWidth\n  />\n  <TextField\n    label=\"Friends (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.friends}\n    onChange={handleDummyChange(\"friends\")}\n    fullWidth\n  /></>);\n\n  return (\n <Dialog open={true} onClose={()=>{}} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Editing {student.name}</DialogTitle>\n  <DialogContent>\n    <DialogContentText>\n      To force a class change after lists are generated, you must edit a\n      student's parameters.&nbsp;\n      {errorMessage.length === 0 ? null : (\n        <span style={{color:'red'}}>Error: {errorMessage}</span>\n      )}\n    </DialogContentText>\n    <TextField\n      label=\"Name\"\n      variant=\"filled\"\n      value={student.name}\n      onChange={handleChange(\"name\")}\n      fullWidth\n    />\n    <Select\n      native\n      value={props.teachers[classIdx]}\n      onChange={evt => setClassIdx(props.teachers.indexOf(evt.target.value))}\n      fullWidth\n    >\n      {props.teachers.map((name, idx) =>\n        <option value={name} key={idx}>{name}</option>\n      )}\n    </Select>\n    <FormControl component=\"fieldset\" style={{marginTop:\"20px\"}}>\n      <FormLabel component=\"legend\">Categories</FormLabel>\n      <FormGroup>\n        {student.categories.map((on, idx) => (\n          <FormControlLabel\n            control={\n              <Checkbox checked={on} onChange={() => {\n                student.categories[idx] = !student.categories[idx];\n                setStudent({...student});\n              }} />\n            }\n            label={props.categories[idx]} key={idx}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n    <FormControl component=\"fieldset\" style={{marginTop:\"20px\"}}>\n      <FormLabel component=\"legend\">Possible teachers</FormLabel>\n      <FormGroup>\n        {props.teachers.map((name, idx) => (\n          <FormControlLabel\n            control={\n              <Checkbox checked={student.possibleTeachers.indexOf(idx) !== -1}\n                onChange={() => {\n                  const possible_idx = student.possibleTeachers.indexOf(idx);\n                  if (possible_idx === -1) student.possibleTeachers.push(idx);\n                  else student.possibleTeachers.splice(possible_idx, 1);\n                  setStudent({...student});\n                }}\n              />\n            }\n            label={name} key={idx}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n    {dummyMarkup}\n  </DialogContent>\n  <DialogActions>\n    <Button color=\"primary\" onClick={\n      () => updateStudent(props.students[props.student_idx])\n    }>\n      Cancel\n    </Button>\n    <Button onClick={() => updateStudent(student)}\n      color=\"primary\">\n      Update\n    </Button>\n  </DialogActions>\n</Dialog>\n  );\n}\n\nexport function ViewIssuesDialog (props) {\n  return (\n <Dialog open={true} onClose={()=>{}} aria-labelledby=\"form-dialog-title\"\n    fullWidth={true} maxWidth=\"md\">\n  <DialogTitle id=\"form-dialog-title\">Issues with current class list</DialogTitle>\n  <DialogContent>\n    <Table size='small'>\n      <TableBody>\n        {props.issues.map((issue, idx) => (\n          <TableRow key={idx}>\n            <TableCell>\n              {issue.message}\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </DialogContent>\n  <DialogActions>\n    <Button color=\"primary\" onClick={props.close}>\n      Close\n    </Button>\n  </DialogActions>\n</Dialog>\n  );\n}\n","// Hill walking algorithm - kinda average interim solution\n// Lists is a jagged array of student indices\n// Class size is [min, max]\n// Students is an array of student objects such that:\n//  friends::[Int] - at least one should be in same class\n//  categories::[Bool] - each boolean category should be roughly evenly distributed\n//  mustBeWith::[Int], cannotBeWith::[Int]\n//  possibleTeachers::[Int]\nexport function iterate (lists, students, classSize) {\n  var numMoves = 0;\n  for (let i = 0; i < 100; i++) {\n    const perm = generatePermutation(lists, students, classSize);\n    if (cost(perm, students) < cost(lists, students)) {\n      lists = perm;\n      numMoves ++;\n      if (numMoves > 5) break;\n    }\n  }\n  const issues = determineIssues(lists, students);\n  return { lists, issues };\n}\n\n// Considerations: class size is not constant\nfunction generatePermutation(lists, students, classSize) {\n  lists = copy(lists);\n  let a = rand(0, students.length),\n      b = rand(0, students.length - 1);\n  if (b === a) b = students.length - 1;\n  for (let i = 0; i < lists.length; i++) {\n    if (lists[i].indexOf(a) >= 0) lists[i][lists[i].indexOf(a)] = b;\n  }\n  for (let i = lists.length - 1; i >= 0; i--) {\n    if (lists[i].indexOf(b) >= 0) lists[i][lists[i].indexOf(b)] = a;\n  }\n  return lists;\n}\n\n// random integer in interval [min, max)\nconst rand = (min, max) => Math.floor(Math.random() * (max - min) + min);\n// Deep copy primitive object/array\nconst copy = obj => JSON.parse(JSON.stringify(obj));\n\nfunction cost (lists, students) {\n  return determineIssues(lists, students).map(x => x.severity).reduce((a,b)=>a+b,0);\n}\n\n// determineIssues :: [[Int]], [Student] -> [{severity::Int, message::String}]\n// Creates a list of issues with a list state for 1) display in a modal\n// and 2) optimisation in `iterate`: minimises \\sum_{k\\in issues} k_{severity}\nexport function determineIssues (lists, students) {\n  var issues = [];\n  for (let j = 0; j < lists.length; j++) {\n    const list = lists[j];\n    for (let i = 0; i < list.length; i++) {\n      const student = students[list[i]];\n      for (const idx of student.mustBeWith) {\n        if (list.indexOf(idx) === -1)\n          issues.push({severity: 3, message: `${student.name} must be with ${students[idx].name}.`});\n      }\n      for (const idx of student.cannotBeWith) {\n        if (list.indexOf(idx) !== -1)\n          issues.push({severity: 5, message: `${student.name} cannot be with ${students[idx].name}.`});\n      }\n      let numFriends = 0;\n      for (const idx of student.friends) {\n        if (list.indexOf(idx) !== -1) numFriends ++;\n      }\n      if (numFriends < 1)\n        issues.push({severity: 4, message: `${student.name} is not with any friends.`});\n      if (student.possibleTeachers.indexOf(j) === -1)\n        issues.push({severity: 3, message: `${student.name} must be with a different teacher.`});\n    }\n  }\n  // TODO: sum number of each category per class, add abs(a-b-1)//2 severity points per no classes choose 2 (a,b) tuples per category?\n  return issues;\n}\n","\nexport function parseCSVSpreadsheet (rawDataString) {\n  var lines = rawDataString.split(/[\\r\\n]+/); // split by all 3 line endings\n  while (lines.indexOf(\"\") !== -1) lines.splice(lines.indexOf(\"\"), 1);\n\n  const safeSplitComma = string => {\n    // we can have commas in strings delimited by \"these quotes\"\n    // this works around that\n    var inString = false;\n    var items = [];\n    var currentItem = '';\n    for (let c of string) {\n      if (c === '\"') {\n        inString = !inString;\n        continue;\n      }\n      if (inString || c !== ',') {\n        currentItem += c;\n      } else {\n        items.push(currentItem.trim());\n        currentItem = '';\n      }\n    }\n    items.push(currentItem.trim());\n    return items;\n  }\n\n  var numClasses = parseInt(lines[1].split(\",\")[5]);\n  var minStudents = parseInt(lines[1].split(\",\")[1]);\n  var maxStudents = parseInt(lines[1].split(\",\")[2]);\n\n  var teacherNames = safeSplitComma(lines[1]).slice(8).filter(x=>x.length>0);\n  var categories = [\"Female\", ...safeSplitComma(lines[5]).slice(10)];\n\n  var students = [];\n  var studentNames = lines.slice(6).map(l => l.substring(0, l.indexOf(',')));\n  for (let i = 6; i < lines.length; i++) {\n    var row = safeSplitComma(lines[i]);\n    if (row.length < 10) console.log(\"Is there a / at the end of the URL?\");\n    students.push({\n      name: row[0],\n      categories: [row[1] === \"F\",\n        ...row.slice(10).map(x => x.length > 0)], // list of bools\n      friends: row.slice(2,7).map(name=>studentNames.indexOf(name))\n                .filter(x=>x>=0),\n      mustBeWith: row[8].length === 0 ? []\n        : safeSplitComma(row[8]).map(name=>studentNames.indexOf(name))\n          .filter(x=>x>=0),\n      cannotBeWith: row[7].length === 0 ? []\n        : safeSplitComma(row[7]).map(n=>studentNames.indexOf(n))\n          .filter(x=>x>=0),\n      // indices of teacher names within teacherNames\n      // if ALL, add all indices [0,1,...,numClasses]\n      possibleTeachers: (row[9].toLowerCase() === \"all\"\n                      || row[9].toLowerCase() === \"any\" || row[9] === \"\")\n        ? teacherNames.map((_,i) => i)\n        : safeSplitComma(row[9]).map(name => teacherNames.indexOf(name))\n          .filter(x=>x>=0)\n    });\n  }\n\n  return {\n    numClasses, // teacherNames.length\n    classSize: [minStudents, maxStudents],\n    teacherNames,\n    categories,\n    students,\n    studentNames\n  }\n}\n\nexport function generateRandomList (studentNames, numClasses) {\n  const shuffle = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  };\n  var listIndices = shuffle(studentNames.map((_,i)=>i));\n  var lists = [];\n  var lastIndex = 0;\n  let k = Math.ceil(studentNames.length/numClasses);\n  for (let i = 0; i < numClasses; i++) {\n    lists.push(listIndices.slice(lastIndex, lastIndex + k));\n    lastIndex += k;\n  }\n  return lists;\n}\n","import React from 'react';\nimport { Box, Button, withStyles } from '@material-ui/core';\nimport Header from './components/header.js';\nimport ColumnList from './components/columnlist.js';\nimport { EditStudentDialog, ViewIssuesDialog } from './components/dialogs.js';\nimport { iterate, determineIssues } from './tools/algorithm.js';\nimport { parseCSVSpreadsheet, generateRandomList } from './tools/parser.js';\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    backgroundColor: \"#EEE\",\n  },\n  fallback: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontFamily: 'sans-serif',\n    fontSize: '30px'\n  }\n});\n\nclass App extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      teacherNames: [],\n      lists: [],\n      /* either view, working or editing */\n      state: 'view',\n      // if positive, modal is open with that index student's config\n      editingStudent: -1,\n      issues: [],\n      viMod: false, // view issues modal open\n    };\n  }\n  import () {\n    // Insert dummy values for now\n    fetch('./dummy.csv')\n      .then(response => {\n        if (response.status !== 200) return console.error(response.status);\n        response.text().then(data => {\n          // This adds numClasses, classSize, teacherNames, categories,\n          //   students, studentNames and lists to the state\n          const parsed = parseCSVSpreadsheet(data);\n          const lists = generateRandomList(\n            parsed.studentNames, parsed.numClasses\n          );\n          const issues = determineIssues(lists, parsed.students);\n          this.setState({ ...parsed, lists, issues });\n        })\n      }).catch(console.log);\n  }\n  toggleState (newState) {\n    if (newState === \"working\" && this.state.state !== \"working\")\n      this.startWorking();\n    else this.stopWorking();\n\n    if (this.state.state !== newState)\n      this.setState({ state: newState });\n    else\n      this.setState({ state: 'import' });\n  }\n  startWorking () {\n    this.worker();\n    this.intev = setInterval(this.worker.bind(this), 500);\n  }\n  worker () {\n    const { lists, issues } = iterate(\n      this.state.lists, this.state.students, this.state.classSize);\n    this.setState({ lists, issues });\n  }\n  stopWorking () {\n    clearInterval(this.intev);\n  }\n  editStudent (student_idx) {\n    // open modal to edit student information\n    this.setState({editingStudent: student_idx});\n  }\n  render () {\n    const { classes } = this.props;\n    const classIdx = this.state.lists.map(list => list.indexOf(this.state.editingStudent) !== -1).indexOf(true);\n    return (\n      <Box className={classes.root}>\n        {this.state.teacherNames.length ? (\n          <ColumnList\n            teachers={this.state.teacherNames}\n            students={this.state.students}\n            categories={this.state.categories}\n            lists={this.state.lists}\n            state={this.state.state}\n            editStudent={this.editStudent.bind(this)}\n          />\n        ) : (\n          <Box className={classes.fallback}>\n            Please &nbsp;\n            <Button onClick={this.import.bind(this)}\n              size='large' color='primary' variant='contained'>\n              import\n            </Button>\n            &nbsp; a spreadsheet\n          </Box>\n        )}\n        <Header\n          import={this.import.bind(this)}\n          export={() => {}}\n          openListManager={() => {}}\n          toggleState={this.toggleState.bind(this)}\n          save={() => {}}\n          restart={() => this.setState({ lists: generateRandomList(\n            this.state.studentNames, this.state.numClasses\n          )})}\n          state={this.state.state}\n          showOptions={this.state.teacherNames.length > 0}\n          issues={this.state.issues}\n          viewIssues={() => this.setState({ viMod: !this.state.viMod })}\n        />\n        {this.state.editingStudent < 0 ? null : (\n          <EditStudentDialog student_idx={this.state.editingStudent}\n            teachers={this.state.teacherNames}\n            students={this.state.students}\n            categories={this.state.categories}\n            updateStudent={student => {\n              const students = this.state.students;\n              students[this.state.editingStudent] = student;\n              this.setState({ students, editingStudent: -1,\n                issues: determineIssues(this.state.lists, students) });\n            }}\n            classIdx={classIdx}\n            updateStudentClassIdx={newClassIdx => {\n              this.state.lists[classIdx].splice(this.state.lists[classIdx].indexOf(this.state.editingStudent), 1);\n              this.state.lists[newClassIdx].push(this.state.editingStudent);\n              this.setState({ lists: this.state.lists });\n            }}\n          />\n        )}\n        {!this.state.viMod ? null : (\n          <ViewIssuesDialog issues={this.state.issues}\n            close={() => this.setState({ viMod: !this.state.viMod })} />\n        )}\n      </Box>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// Progressive web app stuff (read https://bit.ly/CRA-PWA)\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}