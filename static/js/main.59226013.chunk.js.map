{"version":3,"sources":["components/header.js","components/column.js","components/columnlist.js","components/dialogs.js","tools/algorithm.js","tools/parser.js","root.js","serviceWorker.js","index.js","worker.js"],"names":["Header","props","classes","makeStyles","theme","header","position","top","left","width","height","backgroundColor","palette","primary","main","color","headerLeft","margin","spacing","fontFamily","fontSize","headerRight","right","padding","headerButtonGroup","marginLeft","React","useState","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","event","current","contains","target","Box","className","showOptions","href","style","float","rel","Button","onClick","viewIssues","variant","marginRight","issues","length","state","restart","toggleState","ButtonGroup","ref","save","size","Popper","open","anchorEl","transition","disablePortal","TransitionProps","place","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","MenuItem","component","type","display","onChange","e","import","export","openListManager","Column","paper","marginTop","listName","marginBottom","pencil","cursor","relevantCategories","list","map","student_idx","students","categories","cat","i","filter","TableContainer","Table","TableHead","TableRow","TableCell","name","TableBody","idx","key","Chip","label","editStudent","ColumnList","body","columnContainer","bottom","overflowX","whiteSpace","columnBox","teachers","index","lists","EditStudentDialog","studentNames","x","JSON","parse","stringify","student","setStudent","errorMessage","setErrorMessage","friends","join","mustBeWith","cannotBeWith","dummies","setDummies","handleDummyChange","evt","value","classIdx","setClassIdx","updateStudent","stud","nameError","Object","entries","split","indexOf","trim","invalidIdx","possibleTeachers","updateStudentClassIdx","dummyMarkup","TextField","fullWidth","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","Select","native","FormControl","FormLabel","FormGroup","on","FormControlLabel","control","Checkbox","checked","possible_idx","push","splice","DialogActions","ViewIssuesDialog","maxWidth","issue","message","close","determineIssues","classSize","teacherNames","j","severity","numFriends","catMat","_","studentIdx","reduce","a","b","diff","Math","max","min","generateRandomList","numClasses","listIndices","floor","random","shuffle","lastIndex","k","ceil","slice","safeSplitComma","string","inString","items","currentItem","c","parseRequirements","lines","parseInt","minStudents","maxStudents","l","substring","row","n","toLowerCase","isBlankLine","line","listsToCSV","sep","rows","val","requirementsToCSV","s","f","cant","must","cats","issuesToCSV","is","App","editingStudent","viMod","workerInst","worker","addEventListener","setState","data","stopWorking","numUselessIterations","Promise","resolve","reject","reader","FileReader","onload","result","readAsText","files","filename","blob","Blob","elem","document","createElement","window","URL","createObjectURL","download","appendChild","click","removeChild","numCols","y","toString","commasep","blank","unparseCSVSpreadsheet","this","downloadFile","fetch","then","response","status","text","promise","parsed","rawDataString","blanks","blankIdxs","cols","names","parseClassLists","parseCSVSpreadsheet","catch","console","log","newState","startWorking","runAlgorithm","root","bind","fallback","handleFileUpload","dummyFileImport","textDecoration","newClassIdx","Component","withStyles","justifyContent","alignItems","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","addMethods","methods","module","exports","w","Worker"],"mappings":"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","file":"static/js/main.59226013.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Box, ButtonGroup, Popper, Grow, MenuItem, MenuList,\n         Paper, ClickAwayListener, makeStyles } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport default function Header (props) {\n  const classes = makeStyles(theme => ({\n    header: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '50px',\n      backgroundColor: theme.palette.primary.main,\n      color: 'white'\n    },\n    headerLeft: {\n      position: 'absolute',\n      top: 0, left: 0,\n      margin: theme.spacing(1),\n      fontFamily: 'sans-serif',\n      fontSize: '26px'\n    },\n    headerRight: {\n      position: 'absolute',\n      top: 0, right: 0,\n      padding: 6\n    },\n    headerButtonGroup: {\n      marginLeft: theme.spacing(1)\n    }\n  }))();\n\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const handleClose = event => {\n    if (!anchorRef.current || !anchorRef.current.contains(event.target))\n      setMenuOpen(!menuOpen);\n  }\n\n  return (\n<Box className={classes.header}>\n  <Box className={classes.headerLeft}>\n    Class Lists Generator App\n  </Box>\n  {!props.showOptions && (\n    <a href='https://oliverbalfour.github.io/ClassListsGenerator/docs/instructions.html'\n      style={{color:\"white\", fontSize:\"20px\", float: \"right\", fontFamily: \"sans-serif\", margin: \"14px\"}}\n      target=\"_blank\" rel=\"noopener noreferrer\"\n    >Instructions</a>\n  )}\n  { props.showOptions &&\n  <Box className={classes.headerRight}>\n    <Button\n      onClick={props.viewIssues}\n      color='default' variant='contained' style={{marginRight: \"10px\"}}\n    >\n      View issues ({props.issues.length})\n    </Button>\n    {props.state !== 'editing' &&\n      <Button\n        onClick={props.restart}\n        color='default' variant='contained' style={{marginRight: \"10px\"}}\n      >\n        Restart\n      </Button>\n    }\n    {props.state !== 'editing' &&\n      <Button\n        onClick={() => props.toggleState('working')}\n        color='default' variant='contained'\n      >\n        {props.state === 'working' ? 'Stop' : 'Start'}\n      </Button>\n    }\n    <ButtonGroup\n      variant='contained' color='default'\n      className={classes.headerButtonGroup}\n      ref={anchorRef}\n    >\n      <Button onClick={() => props.toggleState('editing')}>\n        {props.state === 'editing' ? 'Done Editing' : 'Edit'}\n      </Button>\n      {props.state !== 'editing' &&\n        <Button onClick={props.save}>Save</Button>\n      }\n      {props.state !== 'editing' &&\n        <Button size=\"small\" onClick={() => setMenuOpen(!menuOpen)}>\n          <MoreHorizIcon />\n        </Button>\n      }\n    </ButtonGroup>\n    <Popper open={menuOpen} anchorEl={anchorRef.current}\n      transition disablePortal>\n      {({ TransitionProps, place }) => (\n        <Grow {...TransitionProps} style={{\n          transformOrigin: place === 'bottom' ? 'center top' : 'center bottom'\n        }}>\n          <Paper>\n            <ClickAwayListener onClickAway={handleClose}>\n              <MenuList id=\"split-button-menu\">\n                <MenuItem component=\"label\">\n                  Import Spreadsheet (CSV)\n                  <input type=\"file\" style={{ display: \"none\" }}\n                    onChange={e => {setMenuOpen(false); props.import(e)}}/>\n                </MenuItem>\n                <MenuItem onClick={()=>{setMenuOpen(false); props.export()}}>\n                  Export Spreadsheet (CSV)\n                </MenuItem>\n                <MenuItem onClick={()=>{\n                  setMenuOpen(false); props.openListManager()\n                }}>\n                  See Saved Class Lists\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  </Box>\n  }\n</Box>\n  );\n}\n","import React from 'react';\nimport {\n  Paper, makeStyles,\n  Table, TableBody, TableCell, TableHead, TableContainer, TableRow,\n  Chip\n} from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\n\nexport default function Column (props) {\n  const classes = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(2),\n      marginTop: '58px', marginRight: theme.spacing(1),\n      fontFamily: 'sans-serif',\n      width: '320px'\n    },\n    listName: {\n      fontSize: '20px',\n      display: 'block',\n      marginBottom: '10px'\n    },\n    className: {\n      margin: 0,\n      fontFamily: 'sans-serif',\n      fontSize: '20px'\n    },\n    pencil: {\n      float: 'right',\n      cursor: 'pointer'\n    }\n  }))();\n\n  // Jagged array of category indices for each student\n  const relevantCategories = props.list.map(student_idx =>\n    props.students[student_idx].categories.map(\n      // category is enabled, and not the first dummy category\n      (cat, i) => cat && i !== 0 ? i : -1\n      // filter out disabled categories\n    ).filter(cat => cat >= 0)\n  );\n\n  return (\n<TableContainer component={Paper} className={classes.paper}>\n  <Table size='small'>\n    <TableHead>\n      <TableRow><TableCell>\n        <h1 className={classes.className}>{props.name}</h1>\n      </TableCell></TableRow>\n    </TableHead>\n    <TableBody>\n      {props.list.map(idx => props.students[idx].name).map((name, idx) => (\n        <TableRow key={idx}>\n          <TableCell>\n            {name} &nbsp;&nbsp;\n            {relevantCategories[idx].map(cat => (\n              <span key={cat}>\n                <Chip label={props.categories[cat]} size='small' />&nbsp;\n              </span>\n            ))}\n            {props.state !== 'editing' ? null : (\n              <CreateIcon className={classes.pencil}\n                onClick={() => props.editStudent(props.list[idx])} />\n            )}\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n</TableContainer>\n  );\n}\n","import React from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Column from './column.js'\n\nexport default function ColumnList (props) {\n  /**\n   * props.teachers :: [name :: String]\n   * props.students :: [{\n     name :: String, categories :: [Bool], friends :: [student index]\n     mustBeWith :: [student index], cannotBeWith :: [student index],\n     possibleTeachers :: [index into teachers]\n   }]\n   * props.categories :: [String]\n   * props.lists :: [[index into students]] where subarrays are teacher indexed\n   */\n  const classes = makeStyles(theme => ({\n    body: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '100%',\n      backgroundColor: '#EEE',\n      margin: 0,\n      display: 'flex'\n    },\n    columnContainer: {\n      position: 'relative',\n      width: '100%',\n      top: 0, bottom: 0,\n      padding: theme.spacing(2),\n      overflowX: 'scroll',\n      whiteSpace: 'nowrap'\n    },\n    columnBox: {\n      position: 'relative',\n      width: '360px',\n      display: 'inline-block',\n      margin: theme.spacing(1),\n      marginTop: 0\n    }\n  }))();\n\n  return (\n<Box className={classes.body}>\n  <Box className={classes.columnContainer}>\n    {props.teachers.map((name, index) => (\n      <Box className={classes.columnBox} key={index}>\n        <Column name={name} list={props.lists[index]}\n          students={props.students} categories={props.categories}\n          state={props.state} editStudent={props.editStudent} />\n      </Box>\n    ))}\n  </Box>\n</Box>\n  );\n}\n","import React from 'react';\nimport {\n  TextField, Dialog, DialogActions, DialogContent, DialogContentText,\n  DialogTitle, Button, FormLabel, FormControl, FormGroup, FormControlLabel,\n  Checkbox, Table, TableBody, TableRow, TableCell, Select\n} from '@material-ui/core';\n\nexport function EditStudentDialog (props) {\n  const studentNames = props.students.map(x=>x.name);\n  /**\n   * props.student_idx :: Int\n   * props.updateStudent :: Student -> void\n   * props.teachers :: [name :: String]\n   * props.students :: [{\n       name :: String, categories :: [Bool], friends :: [student index]\n       mustBeWith :: [student index], cannotBeWith :: [student index],\n       possibleTeachers :: [index into teachers]\n     }]\n   * props.categories :: [String]\n   */\n\n  var [student, setStudent] = React.useState(\n    JSON.parse(JSON.stringify(props.students[props.student_idx]))\n  );\n  var [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  // Note: trims whitespace too\n  const handleChange = key => evt => setStudent({\n    ...student, [key]: evt.target.value.trim()\n  });\n\n  // Use dummy representations of lists of names as checkboxes are a poor choice\n  // for this use case and a dynamic list is a lot of work\n  // TODO: use <Select multiple /> instead https://material-ui.com/components/selects/#multiple-select\n\n  // handle change to 'name 1, name 2, ...' represented as list of\n  // indices into props.students\n  var [dummies, setDummies] = React.useState({\n    friends: student.friends.map(i => studentNames[i]).join(', '),\n    mustBeWith: student.mustBeWith.map(i => studentNames[i]).join(', '),\n    cannotBeWith: student.cannotBeWith.map(i => props.students[i].name).join(', ')\n  });\n  const handleDummyChange = key => evt => setDummies({\n    ...dummies, [key]: evt.target.value\n  });\n  let [classIdx, setClassIdx] = React.useState(props.classIdx);\n  const updateStudent = student => {\n    // Rebase dummy values onto student by parsing CSV strings\n    var stud = {};\n    var nameError = false;\n    for (const [key, value] of Object.entries(dummies)) {\n      if (value === \"\") stud[key] = [];\n      else stud[key] = value.split(\",\").map(x=>studentNames.indexOf(x.trim()));\n      var invalidIdx = stud[key].indexOf(-1);\n      if (invalidIdx !== -1) nameError = value.split(\",\")[invalidIdx];\n    }\n    \n    // Validation\n    if (student.possibleTeachers.length === 0) {\n      setErrorMessage(\"Cannot have zero possible teachers.\");\n    } else if (nameError !== false) {\n      setErrorMessage(\"Invalid name: '\"+nameError+\"'. Make sure spelling is exact and there is one comma between each name.\");\n    } else {\n      for (const [key, value] of Object.entries(stud)) {\n        student[key] = value;\n      }\n      setStudent(student);\n      if (classIdx !== props.classIdx && student !== props.students[props.student_idx])\n        props.updateStudentClassIdx(classIdx);\n      props.updateStudent(student);\n    }\n  }\n  var dummyMarkup = (<>\n  <TextField\n    label=\"Must be with (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.mustBeWith}\n    onChange={handleDummyChange(\"mustBeWith\")}\n    fullWidth\n  />\n  <TextField\n    label=\"Cannot be with (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.cannotBeWith}\n    onChange={handleDummyChange(\"cannotBeWith\")}\n    fullWidth\n  />\n  <TextField\n    label=\"Friends (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.friends}\n    onChange={handleDummyChange(\"friends\")}\n    fullWidth\n  /></>);\n\n  return (\n <Dialog open={true} onClose={()=>{}} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Editing {student.name}</DialogTitle>\n  <DialogContent>\n    <DialogContentText>\n      To force a class change after lists are generated, you must edit a\n      student's parameters.&nbsp;\n      {errorMessage.length === 0 ? null : (\n        <span style={{color:'red'}}>Error: {errorMessage}</span>\n      )}\n    </DialogContentText>\n    <TextField\n      label=\"Name\"\n      variant=\"filled\"\n      value={student.name}\n      onChange={handleChange(\"name\")}\n      fullWidth\n    />\n    <Select\n      native\n      value={props.teachers[classIdx]}\n      onChange={evt => setClassIdx(props.teachers.indexOf(evt.target.value))}\n      fullWidth\n    >\n      {props.teachers.map((name, idx) =>\n        <option value={name} key={idx}>{name}</option>\n      )}\n    </Select>\n    <FormControl component=\"fieldset\" style={{marginTop:\"20px\"}}>\n      <FormLabel component=\"legend\">Categories</FormLabel>\n      <FormGroup>\n        {student.categories.map((on, idx) => (\n          <FormControlLabel\n            control={\n              <Checkbox checked={on} onChange={() => {\n                student.categories[idx] = !student.categories[idx];\n                setStudent({...student});\n              }} />\n            }\n            label={props.categories[idx]} key={idx}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n    <FormControl component=\"fieldset\" style={{marginTop:\"20px\"}}>\n      <FormLabel component=\"legend\">Possible teachers</FormLabel>\n      <FormGroup>\n        {props.teachers.map((name, idx) => (\n          <FormControlLabel\n            control={\n              <Checkbox checked={student.possibleTeachers.indexOf(idx) !== -1}\n                onChange={() => {\n                  const possible_idx = student.possibleTeachers.indexOf(idx);\n                  if (possible_idx === -1) student.possibleTeachers.push(idx);\n                  else student.possibleTeachers.splice(possible_idx, 1);\n                  setStudent({...student});\n                }}\n              />\n            }\n            label={name} key={idx}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n    {dummyMarkup}\n  </DialogContent>\n  <DialogActions>\n    <Button color=\"primary\" onClick={\n      () => updateStudent(props.students[props.student_idx])\n    }>\n      Cancel\n    </Button>\n    <Button onClick={() => updateStudent(student)}\n      color=\"primary\">\n      Update\n    </Button>\n  </DialogActions>\n</Dialog>\n  );\n}\n\nexport function ViewIssuesDialog (props) {\n  return (\n <Dialog open={true} onClose={()=>{}} aria-labelledby=\"form-dialog-title\"\n    fullWidth={true} maxWidth=\"md\">\n  <DialogTitle id=\"form-dialog-title\">Issues with current class list</DialogTitle>\n  <DialogContent>\n    <Table size='small'>\n      <TableBody>\n        {props.issues.map((issue, idx) => (\n          <TableRow key={idx}>\n            <TableCell>\n              {issue.message}\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </DialogContent>\n  <DialogActions>\n    <Button color=\"primary\" onClick={props.close}>\n      Close\n    </Button>\n  </DialogActions>\n</Dialog>\n  );\n}\n","\n// Lists is a jagged array of student indices\n// Class size is [min, max]\n// Students is an array of student objects such that:\n//  friends::[Int] - at least one should be in same class\n//  categories::[Bool] - each boolean category should be roughly evenly distributed\n//  mustBeWith::[Int], cannotBeWith::[Int]\n//  possibleTeachers::[Int]\nexport function iterate (state) {\n  let { lists, students, classSize } = state;\n  // Use a weird mix of hill climbing and simulated annealing optimisation algorithms\n  // Initially we choose the first five moves that reduce cost of up to 100 moves\n  // By the end we string multiple moves together (up to 10 consecutively)\n  // And they can increase cost with a low probability\n  let maxAttemptedChanges = 1000,\n      maxPermutationSteps = 3,\n      currentCost = cost(state);\n  for (let i = 0; i < maxAttemptedChanges; i++) {\n    // if we are 'behind schedule' (not on track to reach c == maxChanges)\n    // then we increase the number of permutation steps\n    // and increase P(accept worse solution)\n    // Generate a new permutation\n    let perm = copy(lists);\n    let schedule = i / maxAttemptedChanges;\n    for (let j = 0; j < Math.ceil(schedule * maxPermutationSteps); j++)\n      perm = generatePermutation(perm, students, classSize);\n    // Update the lists\n    let newCost = cost({...state, lists: perm});\n    if (newCost < cost({...state, lists})) {\n      lists = perm;\n      currentCost = newCost;\n    }\n  }\n  return { lists, issues: determineIssues({...state, lists}), cost: currentCost };\n}\n\nfunction generatePermutation(lists, students, classSize) {\n  lists = copy(lists);\n  // Most perms swap students, it's cleaner and there are more possible moves\n  if (rand(0,2) < 1) {\n    // swap two students (class size remains the same)\n    let a = rand(0, students.length),\n        b = rand(0, students.length - 1);\n    if (b === a) b = students.length - 1;\n    let asrc = searchClasses(lists, a),\n        bsrc = searchClasses(lists, b);\n    lists[asrc][lists[asrc].indexOf(a)] = b;\n    lists[bsrc][lists[bsrc].indexOf(b)] = a;\n  } else {\n    // move one student to another class\n    let a = rand(0, students.length),\n        dst = rand(0, lists.length - 1),\n        src = searchClasses(lists, a);\n    if (dst === src) dst = lists.length - 1;\n    lists[src].splice(lists[src].indexOf(a), 1);\n    lists[dst].push(a);\n  }\n\n  // Test that no student is duplicated\n  var studs = {};\n  for (let list of lists)\n    for (let student of list)\n      if (studs[student]) console.error(\"Duplicated student\");\n      else studs[student] = true;\n\n  return lists;\n}\n\n// random integer in interval [min, max)\nconst rand = (min, max) => Math.floor(Math.random() * (max - min) + min);\n// Deep copy primitive object/array\nconst copy = obj => JSON.parse(JSON.stringify(obj));\n\n// Sum severities of the issues list\nfunction cost (state) {\n  return determineIssues(state)\n    .map(x => x.severity)\n    .reduce((a,b)=>a+b,0);\n}\n\n// Search a class list for student index x (-1 if not found)\nconst searchClasses = (lists, x) =>\n  lists.map(list => list.indexOf(x) !== -1).indexOf(true);\n\n// Creates a list of issues with a list state for 1) display in a modal\n// and 2) optimisation in `iterate`: minimises \\sum_{k\\in issues} k_{severity}\nexport function determineIssues (state) {\n  let { lists, students, classSize, categories, teacherNames } = state;\n  var issues = [];\n  for (let j = 0; j < lists.length; j++) {\n    const list = lists[j];\n    for (let i = 0; i < list.length; i++) {\n      const student = students[list[i]];\n      // Must/cannot be with\n      for (const idx of student.mustBeWith) {\n        if (list.indexOf(idx) === -1)\n          issues.push({severity: 3, message: `${student.name} must be with ${students[idx].name}.`});\n      }\n      for (const idx of student.cannotBeWith) {\n        if (list.indexOf(idx) !== -1)\n          issues.push({severity: 5, message: `${student.name} cannot be with ${students[idx].name}.`});\n      }\n      // Friends\n      let numFriends = 0;\n      for (const idx of student.friends) {\n        if (list.indexOf(idx) !== -1) numFriends ++;\n      }\n      if (numFriends < 1)\n        issues.push({severity: 3, message: `${student.name} is not with any friends.`});\n      // Possible teacherNames\n      if (student.possibleTeachers.indexOf(j) === -1)\n        issues.push({severity: 5, message: `${student.name} must not be in ${teacherNames[j]}'s class.`});\n    }\n    // Class size\n    if (list.length < classSize[0]) {\n      const severity = classSize[0] - list.length;\n      issues.push({\n        severity: 8 * severity,\n        message: `${teacherNames[j]}'s class has ${severity} too few students.`\n      });\n    } else if (list.length > classSize[1]) {\n      const severity = list.length - classSize[1];\n      issues.push({\n        severity: 10 * severity,\n        message: `${teacherNames[j]}'s class has ${severity} too many students.`\n      });\n    }\n  }\n  // Categories\n  // catMat[categoryIdx][classIdx] is num people with that cat in that class\n  const catMat = categories.map((_, i) => lists.map(\n    // count number of students in list with category i enabled\n    list => list.map(studentIdx => students[studentIdx].categories[i]).reduce((a,b)=>a+b,0)\n  ));\n  for (let i = 0; i < categories.length; i++) {\n    const diff = Math.max(...catMat[i]) - Math.min(...catMat[i]);\n    if ((diff > 1 && i !== 0) || (diff > 3 && i === 0)) { // gender imbalance is less important\n      issues.push({\n        severity: diff,\n        message: `Imbalanced ${categories[i]} category: ${catMat[i]} students per class respectively.`\n      });\n    }\n  }\n\n  return issues;\n}\n\nexport function generateRandomList (studentNames, numClasses) {\n  const shuffle = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  };\n  var listIndices = shuffle(studentNames.map((_,i)=>i));\n  var lists = [];\n  var lastIndex = 0;\n  let k = Math.ceil(studentNames.length/numClasses);\n  for (let i = 0; i < numClasses; i++) {\n    lists.push(listIndices.slice(lastIndex, lastIndex + k));\n    lastIndex += k;\n  }\n  return lists;\n}\n","\nimport {generateRandomList,determineIssues} from './algorithm.js';\n\nconst safeSplitComma = string => {\n  // we can have commas in strings delimited by \"these quotes\"\n  // this works around that\n  var inString = false;\n  var items = [];\n  var currentItem = '';\n  for (let c of string) {\n    if (c === '\"') {\n      inString = !inString;\n      continue;\n    }\n    if (inString || c !== ',') {\n      currentItem += c;\n    } else {\n      items.push(currentItem.trim());\n      currentItem = '';\n    }\n  }\n  items.push(currentItem.trim());\n  return items;\n}\n\nexport function parseCSVSpreadsheet (rawDataString) {\n  var lines = rawDataString.split(/[\\r\\n]+/); // split by all 3 line endings\n  while (lines.indexOf(\"\") !== -1) lines.splice(lines.indexOf(\"\"), 1);\n  var data;\n\n  if (lines[0][0] === ',') {\n    // requirements only\n    data = parseRequirements(lines);\n    data.lists = generateRandomList(data.studentNames, data.numClasses);\n  } else {\n    // exported sheet (lists, two blank lines, requirements, two blank lines, issues)\n    let blanks = 0, blankIdxs = [];\n    for (let i = 0; i < lines.length; i++) {\n      if (isBlankLine(lines[i])) blanks++;\n      else blanks = 0;\n      if (blanks === 2) {\n        blanks = 0;\n        blankIdxs.push(i);\n      }\n    }\n    // 0 to blankIdxs[0]-1 exclusive is class list\n    // blankIdxs[0]+1 to blankIdxs[1]-1 exclusive is requirements list\n    data = parseRequirements(lines.slice(blankIdxs[0]+1, blankIdxs[1]-1));\n    data.lists = parseClassLists(data, lines.slice(0, blankIdxs[0]-1));\n  }\n\n  data.issues = determineIssues(data);\n\n  return data;\n}\n\nfunction parseClassLists (state, lines) {\n  const cols = state.teacherNames.length;\n  const extractCols = line => line.split(',').slice(0,cols).map(x=>x.substring(1,x.length-1));\n  const lists = state.teacherNames.map(x=>[]);\n  const idxFromName = name => state.studentNames.indexOf(name);\n  for (let i = 1; i < lines.length; i ++) {\n    const names = extractCols(lines[i]);\n    for (let j = 0; j < cols; j++) {\n      lists[j].push(idxFromName(names[j]));\n    }\n  }\n  return lists;\n}\n\nfunction parseRequirements (lines) {\n  var numClasses = parseInt(lines[1].split(\",\")[5]);\n  var minStudents = parseInt(lines[1].split(\",\")[1]);\n  var maxStudents = parseInt(lines[1].split(\",\")[2]);\n\n  var teacherNames = safeSplitComma(lines[1]).slice(8).filter(x=>x.length>0);\n  var categories = [\"Female\", ...safeSplitComma(lines[4]).slice(10)];\n\n  var students = [];\n  var studentNames = lines.slice(5).map(l => l.substring(0, l.indexOf(',')));\n  for (let i = 5; i < lines.length; i++) {\n    var row = safeSplitComma(lines[i]);\n    students.push({\n      name: row[0],\n      categories: [row[1] === \"F\",\n        ...row.slice(10).map(x => x.length > 0)], // list of bools\n      friends: row.slice(2,7).map(name=>studentNames.indexOf(name))\n                .filter(x=>x>=0),\n      mustBeWith: row[8].length === 0 ? []\n        : safeSplitComma(row[8]).map(name=>studentNames.indexOf(name))\n          .filter(x=>x>=0),\n      cannotBeWith: row[7].length === 0 ? []\n        : safeSplitComma(row[7]).map(n=>studentNames.indexOf(n))\n          .filter(x=>x>=0),\n      // indices of teacher names within teacherNames\n      // if ALL, add all indices [0,1,...,numClasses]\n      possibleTeachers: (row[9].toLowerCase() === \"all\"\n                      || row[9].toLowerCase() === \"any\" || row[9] === \"\")\n        ? teacherNames.map((_,i) => i)\n        : safeSplitComma(row[9]).map(name => teacherNames.indexOf(name))\n          .filter(x=>x>=0)\n    });\n  }\n\n  return {\n    numClasses, // teacherNames.length\n    classSize: [minStudents, maxStudents],\n    teacherNames,\n    categories,\n    students,\n    studentNames\n  }\n}\n\nconst isBlankLine = line => line.split('').filter(c => c !== ',').length === 0;\n\nconst commasep = numCols => list => {\n  let s = list.map(x => {\n    const y = x.toString();\n    return (y.indexOf(',') === -1 || (y[0] === '\"' && y[y.length-1]==='\"')) ? y : `\"${y}\"`;\n  }).join(',');\n  for (let i = 0; i < numCols - list.length; i++)\n    s += ',';\n  return s;\n}\n\nfunction listsToCSV (state,sep) {\n  // first we format the data as a matrix of values\n  let rows = [state.teacherNames];\n  for (let i = 0; i < Math.max(...state.lists.map(l=>l.length)); i++) {\n    const row = [];\n    for (let j = 0; j < state.lists.length; j++) {\n      if (i < state.lists[j].length)\n        row.push(state.students[state.lists[j][i]].name);\n      else row.push(\"\");\n    }\n    // add quotes to escape commas in names in case they pop up\n    rows.push(row.map(val => `\"${val}\"`));\n  }\n  // next we turn it to CSV\n  let string = rows.map(sep).join(\"\\n\");\n  return string;\n}\n\nfunction requirementsToCSV (state,sep) {\n  let lines = [];\n  lines.push(sep(['','Min','Max']));\n  lines.push(sep(['Students per class',state.classSize[0],state.classSize[1],'','No. classes',state.teacherNames.length,'','Teachers',...state.teacherNames]));\n  lines.push(sep([]));\n  lines.push(sep(['Required','Optional','','','','','','','','Custom categories']));\n  lines.push(sep(['Name','Gender','Friend 1','Friend 2','Friend 3','Friend 4','Friend 5',\"Can't be with\",'Must be with','Possible teachers',...state.categories]));\n  for (let i = 0; i < state.students.length; i++) {\n    var s = state.students[i];\n    var f = n => state.students[n].name;\n    var friends = s.friends.map(f);\n    while (friends.length < 5) friends.push(\"\");\n    var cant = s.cannotBeWith.map(f).join(', ');\n    var must = s.mustBeWith.map(f).join(', ');\n    var teachers = s.possibleTeachers.length === state.teacherNames.length ? \"ALL\" : s.possibleTeachers.map(n=>state.teacherNames[n]).join(', ');\n    var cats = s.categories.slice(1).map(b => b ? \"YES\" : \"\");\n    lines.push(sep([s.name,s.categories[0]?'F':'M',...friends,cant,must,teachers,...cats]));\n  }\n  return lines.join('\\n');\n}\n\nfunction issuesToCSV (state,sep) {\n  return sep([\"Issues:\"]) + '\\n' + state.issues.map(is => sep([is.message])).join('\\n');\n}\n\nexport function unparseCSVSpreadsheet (state) {\n  const numCols = Math.max(state.teacherNames.length + 8, state.categories.length + 10);\n  const sep = commasep(numCols);\n  const blank = '\\n'+sep([]);\n  return [listsToCSV(state,sep), requirementsToCSV(state,sep), issuesToCSV(state,sep)].join(blank+blank+'\\n');\n}\n","import React from 'react';\nimport { Box, Button, withStyles } from '@material-ui/core';\nimport Header from './components/header.js';\nimport ColumnList from './components/columnlist.js';\nimport { EditStudentDialog, ViewIssuesDialog } from './components/dialogs.js';\nimport { determineIssues, generateRandomList } from './tools/algorithm.js';\nimport worker from 'workerize-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { parseCSVSpreadsheet, unparseCSVSpreadsheet } from './tools/parser.js';\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    backgroundColor: \"#EEE\",\n  },\n  fallback: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontFamily: 'sans-serif',\n    fontSize: '30px'\n  }\n});\n\nclass App extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      teacherNames: [],\n      lists: [],\n      /* either view, working or editing */\n      state: 'view',\n      // if positive, modal is open with that index student's config\n      editingStudent: -1,\n      issues: [],\n      viMod: false, // view issues modal open\n    };\n    this.workerInst = worker();\n    this.workerInst.addEventListener('message', message => {\n      if (this.state.state === 'working') {\n        this.setState(message.data);\n        this.stopWorking();\n      }\n    });\n    // after 20 iterations which change nothing, pause\n    this.numUselessIterations = 0;\n  }\n  handleFileUpload (evt) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.readAsText(evt.target.files[0]);\n    });\n  }\n  downloadFile (filename, data) {\n    let blob = new Blob([data], {type: 'text/csv'}),\n        elem = document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n  }\n  export (e) {\n    const string = unparseCSVSpreadsheet(this.state);\n    // finally we download\n    this.downloadFile(\"class_lists.csv\", string);\n  }\n  dummyFileImport () {\n    return new Promise((resolve, reject) =>\n      fetch('./dummy.csv')\n        .then(response => {\n          if (response.status !== 200) reject(response.status);\n          else response.text().then(resolve);\n        })\n    );\n  }\n  import (promise) {\n    promise.then(data => {\n      // This adds numClasses, classSize, teacherNames, categories,\n      //   students, studentNames, issues and lists to the state\n      const parsed = parseCSVSpreadsheet(data);\n      this.setState(parsed);\n    }).catch(console.log);\n  }\n  toggleState (newState) {\n    if (newState === \"working\" && this.state.state !== \"working\")\n      this.startWorking();\n    else this.stopWorking();\n\n    if (this.state.state !== newState)\n      this.setState({ state: newState });\n    else\n      this.setState({ state: 'import' });\n  }\n  startWorking () {\n    this.workerInst.runAlgorithm(this.state);\n  }\n  stopWorking () {\n    this.setState({ state: 'view' });\n  }\n  restart () {\n    this.stopWorking();\n    const { studentNames, numClasses } = this.state;\n    const lists = generateRandomList(studentNames, numClasses);\n    const issues = determineIssues({...this.state, lists});\n    this.setState({ lists, issues, state: \"view\" });\n  }\n  editStudent (student_idx) {\n    // open modal to edit student information\n    this.setState({editingStudent: student_idx});\n  }\n  render () {\n    const { classes } = this.props;\n    const classIdx = this.state.lists.map(list => list.indexOf(this.state.editingStudent) !== -1).indexOf(true);\n    return (\n      <Box className={classes.root}>\n        {this.state.teacherNames.length ? (\n          <ColumnList\n            teachers={this.state.teacherNames}\n            students={this.state.students}\n            categories={this.state.categories}\n            lists={this.state.lists}\n            state={this.state.state}\n            editStudent={this.editStudent.bind(this)}\n          />\n        ) : (\n          <Box className={classes.fallback}>\n            Please &nbsp;\n            <Button component=\"label\"\n              size='large' color='primary' variant='contained'>\n              import\n              <input type=\"file\" style={{ display: \"none\" }}\n                onChange={e => this.import(this.handleFileUpload(e))}/>\n            </Button>\n            &nbsp; a spreadsheet&nbsp;\n            <span style={{fontSize: \"1rem\"}}>\n              (or&nbsp;\n              <span onClick={()=>this.import(this.dummyFileImport())}\n                style={{color:\"blue\",textDecoration:\"underline\",cursor:\"pointer\"}}>\n                see a demo\n              </span>\n              )\n            </span>\n          </Box>\n        )}\n        <Header\n          import={e => this.import(this.handleFileUpload(e))}\n          export={this.export.bind(this)}\n          openListManager={() => {}}\n          toggleState={this.toggleState.bind(this)}\n          save={() => {}}\n          restart={this.restart.bind(this)}\n          state={this.state.state}\n          showOptions={this.state.teacherNames.length > 0}\n          issues={this.state.issues}\n          viewIssues={() => this.setState({ viMod: !this.state.viMod })}\n        />\n        {this.state.editingStudent < 0 ? null : (\n          <EditStudentDialog student_idx={this.state.editingStudent}\n            teachers={this.state.teacherNames}\n            students={this.state.students}\n            categories={this.state.categories}\n            updateStudent={student => {\n              const students = this.state.students;\n              students[this.state.editingStudent] = student;\n              this.setState({ students, editingStudent: -1 });\n              this.setState({ issues: determineIssues(this.state) });\n            }}\n            classIdx={classIdx}\n            updateStudentClassIdx={newClassIdx => {\n              this.state.lists[classIdx].splice(this.state.lists[classIdx].indexOf(this.state.editingStudent), 1);\n              this.state.lists[newClassIdx].push(this.state.editingStudent);\n              this.setState({ lists: this.state.lists });\n            }}\n          />\n        )}\n        {!this.state.viMod ? null : (\n          <ViewIssuesDialog issues={this.state.issues}\n            close={() => this.setState({ viMod: !this.state.viMod })} />\n        )}\n      </Box>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// Progressive web app stuff (read https://bit.ly/CRA-PWA)\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"runAlgorithm\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"4e3212f62110c66d90a7.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}