{"version":3,"sources":["components/header.js","components/column.js","components/columnlist.js","components/editstudentdialog.js","parser.js","root.js","serviceWorker.js","index.js"],"names":["Header","props","classes","makeStyles","theme","header","position","top","left","width","height","backgroundColor","palette","primary","main","color","headerLeft","margin","spacing","fontFamily","fontSize","headerRight","right","padding","headerButtonGroup","marginLeft","React","useState","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","event","current","contains","target","Box","className","showOptions","state","ButtonGroup","variant","Button","onClick","restart","toggleState","ref","save","size","Popper","open","anchorEl","transition","disablePortal","TransitionProps","place","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","MenuItem","import","export","openListManager","Column","paper","marginTop","marginRight","listName","display","marginBottom","pencil","float","cursor","relevantCategories","list","map","student_idx","students","categories","cat","i","filter","TableContainer","component","Table","TableHead","TableRow","TableCell","name","TableBody","idx","key","Chip","label","editStudent","ColumnList","body","columnContainer","bottom","overflowX","whiteSpace","columnBox","teachers","index","lists","EditStudentDialog","studentNames","x","JSON","parse","stringify","student","setStudent","errorMessage","setErrorMessage","friends","join","mustBeWith","cannotBeWith","dummies","setDummies","handleDummyChange","evt","value","updateStudent","stud","nameError","Object","entries","split","indexOf","trim","invalidIdx","possibleTeachers","length","dummyMarkup","TextField","onChange","fullWidth","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","FormControl","FormLabel","FormGroup","on","FormControlLabel","control","Checkbox","checked","possible_idx","push","splice","DialogActions","generateRandomInitialList","numClasses","listIndices","a","j","Math","floor","random","shuffle","_","lastIndex","k","ceil","slice","App","teacherNames","editingStudent","fetch","then","response","status","console","error","text","data","parsed","rawDataString","lines","safeSplitComma","string","inString","items","currentItem","c","parseInt","minStudents","maxStudents","l","substring","row","log","n","toLowerCase","classSize","parseCSVSpreadsheet","setState","catch","newState","this","root","bind","fallback","Component","withStyles","justifyContent","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.883c99b5.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Box, ButtonGroup, Popper, Grow, MenuItem, MenuList,\n         Paper, ClickAwayListener, makeStyles } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport default function Header (props) {\n  const classes = makeStyles(theme => ({\n    header: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '50px',\n      backgroundColor: theme.palette.primary.main,\n      color: 'white'\n    },\n    headerLeft: {\n      position: 'absolute',\n      top: 0, left: 0,\n      margin: theme.spacing(1),\n      fontFamily: 'sans-serif',\n      fontSize: '26px'\n    },\n    headerRight: {\n      position: 'absolute',\n      top: 0, right: 0,\n      padding: 6\n    },\n    headerButtonGroup: {\n      marginLeft: theme.spacing(1)\n    }\n  }))();\n\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const handleClose = event => {\n    if (!anchorRef.current || !anchorRef.current.contains(event.target))\n      setMenuOpen(!menuOpen);\n  }\n\n  return (\n<Box className={classes.header}>\n  <Box className={classes.headerLeft}>\n    Class Lists Generator App\n  </Box>\n  { props.showOptions &&\n  <Box className={classes.headerRight}>\n    {props.state !== 'editing' &&\n      <ButtonGroup\n        variant='contained' color='default'\n        className={classes.headerButtonGroup}\n      >\n        <Button onClick={props.restart}>Start over</Button>\n        <Button onClick={() => props.toggleState('working')}>\n          {props.state === 'working' ? 'Pause' : 'Keep working'}\n        </Button>\n      </ButtonGroup>\n    }\n    <ButtonGroup\n      variant='contained' color='default'\n      className={classes.headerButtonGroup}\n      ref={anchorRef}\n    >\n      <Button onClick={() => props.toggleState('editing')}>\n        {props.state === 'editing' ? 'Done Editing' : 'Edit'}\n      </Button>\n      {props.state !== 'editing' &&\n        <Button onClick={props.save}>Save</Button>\n      }\n      {props.state !== 'editing' &&\n        <Button size=\"small\" onClick={() => setMenuOpen(!menuOpen)}>\n          <MoreHorizIcon />\n        </Button>\n      }\n    </ButtonGroup>\n    <Popper open={menuOpen} anchorEl={anchorRef.current}\n      transition disablePortal>\n      {({ TransitionProps, place }) => (\n        <Grow {...TransitionProps} style={{\n          transformOrigin: place === 'bottom' ? 'center top' : 'center bottom'\n        }}>\n          <Paper>\n            <ClickAwayListener onClickAway={handleClose}>\n              <MenuList id=\"split-button-menu\">\n                <MenuItem onClick={()=>{setMenuOpen(false); props.import()}}>\n                  Import Spreadsheet (CSV)\n                </MenuItem>\n                <MenuItem onClick={()=>{setMenuOpen(false); props.export()}}>\n                  Export Spreadsheet (CSV)\n                </MenuItem>\n                <MenuItem onClick={()=>{\n                  setMenuOpen(false); props.openListManager()\n                }}>\n                  See Saved Class Lists\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  </Box>\n  }\n</Box>\n  );\n}\n","import React from 'react';\nimport {\n  Paper, makeStyles,\n  Table, TableBody, TableCell, TableHead, TableContainer, TableRow,\n  Chip\n} from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\n\nexport default function Column (props) {\n  const classes = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(2),\n      marginTop: '58px', marginRight: theme.spacing(1),\n      fontFamily: 'sans-serif',\n      width: '320px'\n    },\n    listName: {\n      fontSize: '20px',\n      display: 'block',\n      marginBottom: '10px'\n    },\n    className: {\n      margin: 0,\n      fontFamily: 'sans-serif',\n      fontSize: '20px'\n    },\n    pencil: {\n      float: 'right',\n      cursor: 'pointer'\n    }\n  }))();\n\n  // Jagged array of category indices for each student\n  const relevantCategories = props.list.map(student_idx =>\n    props.students[student_idx].categories.map(\n      // category is enabled, and not the first dummy category\n      (cat, i) => cat && i !== 0 ? i : -1\n      // filter out disabled categories\n    ).filter(cat => cat >= 0)\n  );\n\n  return (\n<TableContainer component={Paper} className={classes.paper}>\n  <Table size='small'>\n    <TableHead>\n      <TableRow><TableCell>\n        <h1 className={classes.className}>{props.name}</h1>\n      </TableCell></TableRow>\n    </TableHead>\n    <TableBody>\n      {props.list.map(idx => props.students[idx].name).map((name, idx) => (\n        <TableRow key={idx}>\n          <TableCell>\n            {name} &nbsp;&nbsp;\n            {relevantCategories[idx].map(cat => (\n              <span key={cat}>\n                <Chip label={props.categories[cat]} size='small' />&nbsp;\n              </span>\n            ))}\n            {props.state !== 'editing' ? null : (\n              <CreateIcon className={classes.pencil}\n                onClick={() => props.editStudent(props.list[idx])} />\n            )}\n          </TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n</TableContainer>\n  );\n}\n","import React from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Column from './column.js'\n\nexport default function ColumnList (props) {\n  /**\n   * props.teachers :: [name :: String]\n   * props.students :: [{\n     name :: String, categories :: [Bool], friends :: [student index]\n     mustBeWith :: [student index], cannotBeWith :: [student index],\n     possibleTeachers :: [index into teachers]\n   }]\n   * props.categories :: [String]\n   * props.lists :: [[index into students]] where subarrays are teacher indexed\n   */\n  const classes = makeStyles(theme => ({\n    body: {\n      position: 'absolute',\n      top: 0, left: 0,\n      width: '100%', height: '100%',\n      backgroundColor: '#EEE',\n      margin: 0,\n      display: 'flex'\n    },\n    columnContainer: {\n      position: 'relative',\n      width: '100%',\n      top: 0, bottom: 0,\n      padding: theme.spacing(2),\n      overflowX: 'scroll',\n      whiteSpace: 'nowrap'\n    },\n    columnBox: {\n      position: 'relative',\n      width: '360px',\n      display: 'inline-block',\n      margin: theme.spacing(1),\n      marginTop: 0\n    }\n  }))();\n\n  return (\n<Box className={classes.body}>\n  <Box className={classes.columnContainer}>\n    {props.teachers.map((name, index) => (\n      <Box className={classes.columnBox} key={index}>\n        <Column name={name} list={props.lists[index]}\n          students={props.students} categories={props.categories}\n          state={props.state} editStudent={props.editStudent} />\n      </Box>\n    ))}\n  </Box>\n</Box>\n  );\n}\n","import React from 'react';\nimport { TextField, Dialog, DialogActions, DialogContent, DialogContentText,\n  DialogTitle, Button, FormLabel, FormControl, FormGroup, FormControlLabel,\n  Checkbox } from '@material-ui/core';\n\nexport default function EditStudentDialog (props) {\n  const studentNames = props.students.map(x=>x.name);\n  /**\n   * props.student_idx :: Int\n   * props.updateStudent :: Student -> void\n   * props.teachers :: [name :: String]\n   * props.students :: [{\n       name :: String, categories :: [Bool], friends :: [student index]\n       mustBeWith :: [student index], cannotBeWith :: [student index],\n       possibleTeachers :: [index into teachers]\n     }]\n   * props.categories :: [String]\n   */\n\n  var [student, setStudent] = React.useState(\n    JSON.parse(JSON.stringify(props.students[props.student_idx]))\n  );\n  var [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  // Note: trims whitespace too\n  const handleChange = key => evt => setStudent({\n    ...student, [key]: evt.target.value.trim()\n  });\n\n  // Use dummy representations of lists of names as checkboxes are a poor choice\n  // for this use case and a dynamic list is a lot of work\n\n  // handle change to 'name 1, name 2, ...' represented as list of\n  // indices into props.students\n  var [dummies, setDummies] = React.useState({\n    friends: student.friends.map(i => studentNames[i]).join(', '),\n    mustBeWith: student.mustBeWith.map(i => studentNames[i]).join(', '),\n    cannotBeWith: student.cannotBeWith.map(i => props.students[i].name).join(', ')\n  });\n  const handleDummyChange = key => evt => setDummies({\n    ...dummies, [key]: evt.target.value\n  });\n  const updateStudent = student => {\n    // Rebase dummy values onto student by parsing CSV strings\n    var stud = {};\n    var nameError = false;\n    for (const [key, value] of Object.entries(dummies)) {\n      if (value === \"\") stud[key] = [];\n      else stud[key] = value.split(\",\").map(x=>studentNames.indexOf(x.trim()));\n      var invalidIdx = stud[key].indexOf(-1);\n      if (invalidIdx !== -1) nameError = value.split(\",\")[invalidIdx];\n    }\n    \n    // Validation\n    if (student.possibleTeachers.length === 0) {\n      setErrorMessage(\"Cannot have zero possible teachers.\");\n    } else if (nameError !== false) {\n      setErrorMessage(\"Invalid name: '\"+nameError+\"'. Make sure spelling is exact and there is one comma between each name.\");\n    } else {\n      for (const [key, value] of Object.entries(stud)) {\n        student[key] = value;\n      }\n      setStudent(student);\n      props.updateStudent(student);\n    }\n  }\n  var dummyMarkup = (<>\n  <TextField\n    label=\"Must be with (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.mustBeWith}\n    onChange={handleDummyChange(\"mustBeWith\")}\n    fullWidth\n  />\n  <TextField\n    label=\"Cannot be with (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.cannotBeWith}\n    onChange={handleDummyChange(\"cannotBeWith\")}\n    fullWidth\n  />\n  <TextField\n    label=\"Friends (comma separated names)\"\n    variant=\"filled\"\n    value={dummies.friends}\n    onChange={handleDummyChange(\"friends\")}\n    fullWidth\n  /></>);\n\n\n  return (\n <Dialog open={true} onClose={()=>{}} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Editing {student.name}</DialogTitle>\n  <DialogContent>\n    <DialogContentText>\n      To force a class change after lists are generated, you must edit a\n      student's parameters.&nbsp;\n      {errorMessage.length === 0 ? null : (\n        <span style={{color:'red'}}>Error: {errorMessage}</span>\n      )}\n    </DialogContentText>\n    <TextField\n      label=\"Name\"\n      variant=\"filled\"\n      value={student.name}\n      onChange={handleChange(\"name\")}\n      fullWidth\n    />\n    <FormControl component=\"fieldset\" style={{marginTop:\"20px\"}}>\n      <FormLabel component=\"legend\">Categories</FormLabel>\n      <FormGroup>\n        {student.categories.map((on, idx) => (\n          <FormControlLabel\n            control={\n              <Checkbox checked={on} onChange={() => {\n                student.categories[idx] = !student.categories[idx];\n                setStudent({...student});\n              }} />\n            }\n            label={props.categories[idx]} key={idx}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n    <FormControl component=\"fieldset\" style={{marginTop:\"20px\"}}>\n      <FormLabel component=\"legend\">Possible teachers</FormLabel>\n      <FormGroup>\n        {props.teachers.map((name, idx) => (\n          <FormControlLabel\n            control={\n              <Checkbox checked={student.possibleTeachers.indexOf(idx) !== -1}\n                onChange={() => {\n                  const possible_idx = student.possibleTeachers.indexOf(idx);\n                  if (possible_idx === -1) student.possibleTeachers.push(idx);\n                  else student.possibleTeachers.splice(possible_idx, 1);\n                  setStudent({...student});\n                }}\n              />\n            }\n            label={name} key={idx}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n    {dummyMarkup}\n  </DialogContent>\n  <DialogActions>\n    <Button color=\"primary\" onClick={\n      () => updateStudent(props.students[props.student_idx])\n    }>\n      Cancel\n    </Button>\n    <Button onClick={() => updateStudent(student)}\n      color=\"primary\">\n      Update\n    </Button>\n  </DialogActions>\n</Dialog>\n  );\n}","\nexport function parseCSVSpreadsheet (rawDataString) {\n  var lines = rawDataString.split(/[\\r\\n]+/); // split by all 3 line endings\n  while (lines.indexOf(\"\") !== -1) lines.splice(lines.indexOf(\"\"), 1);\n\n  const safeSplitComma = string => {\n    // we can have commas in strings delimited by \"these quotes\"\n    // this works around that\n    var inString = false;\n    var items = [];\n    var currentItem = '';\n    for (let c of string) {\n      if (c === '\"') {\n        inString = !inString;\n        continue;\n      }\n      if (inString || c !== ',') {\n        currentItem += c;\n      } else {\n        items.push(currentItem.trim());\n        currentItem = '';\n      }\n    }\n    items.push(currentItem.trim());\n    return items;\n  }\n\n  var numClasses = parseInt(lines[1].split(\",\")[5]);\n  var minStudents = parseInt(lines[1].split(\",\")[1]);\n  var maxStudents = parseInt(lines[1].split(\",\")[2]);\n\n  var teacherNames = safeSplitComma(lines[1]).slice(8).filter(x=>x.length>0);\n  var categories = [\"Female\", ...safeSplitComma(lines[5]).slice(10)];\n\n  var students = [];\n  var studentNames = lines.slice(6).map(l => l.substring(0, l.indexOf(',')));\n  for (let i = 6; i < lines.length; i++) {\n    var row = safeSplitComma(lines[i]);\n    if (row.length < 10) console.log(\"Is there a / at the end of the URL?\");\n    students.push({\n      name: row[0],\n      categories: [row[1] === \"F\",\n        ...row.slice(10).map(x => x.length > 0)], // list of bools\n      friends: row.slice(2,7).map(name=>studentNames.indexOf(name))\n                .filter(x=>x>=0),\n      mustBeWith: row[8].length === 0 ? []\n        : safeSplitComma(row[8]).map(name=>studentNames.indexOf(name))\n          .filter(x=>x>=0),\n      cannotBeWith: row[7].length === 0 ? []\n        : safeSplitComma(row[7]).map(n=>studentNames.indexOf(n))\n          .filter(x=>x>=0),\n      // indices of teacher names within teacherNames\n      // if ALL, add all indices [0,1,...,numClasses]\n      possibleTeachers: (row[9].toLowerCase() === \"all\"\n                      || row[9].toLowerCase() === \"any\" || row[9] === \"\")\n        ? teacherNames.map((_,i) => i)\n        : safeSplitComma(row[9]).map(name => teacherNames.indexOf(name))\n          .filter(x=>x>=0)\n    });\n  }\n\n  return {\n    numClasses, // teacherNames.length\n    classSize: [minStudents, maxStudents],\n    teacherNames,\n    categories,\n    students,\n    studentNames\n  }\n}\n\nexport function generateRandomInitialList (studentNames, numClasses) {\n  const shuffle = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  };\n  var listIndices = shuffle(studentNames.map((_,i)=>i));\n  var lists = [];\n  var lastIndex = 0;\n  let k = Math.ceil(studentNames.length/numClasses);\n  for (let i = 0; i < numClasses; i++) {\n    lists.push(listIndices.slice(lastIndex, lastIndex + k));\n    lastIndex += k;\n  }\n  return lists;\n}\n","import React from 'react';\nimport { Box, Button, withStyles } from '@material-ui/core';\nimport Header from './components/header.js';\nimport ColumnList from './components/columnlist.js';\nimport EditStudentDialog from './components/editstudentdialog.js';\nimport { parseCSVSpreadsheet, generateRandomInitialList } from './parser.js';\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    backgroundColor: \"#EEE\",\n  },\n  fallback: {\n    position: 'absolute',\n    top: 0, left: 0,\n    width: '100%', height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontFamily: 'sans-serif',\n    fontSize: '30px'\n  }\n});\n\nclass App extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      teacherNames: [],\n      lists: [],\n      /* either view, working or editing */\n      state: 'view',\n      // if positive, modal is open with that index student's config\n      editingStudent: -1,\n    };\n  }\n  import () {\n    // Insert dummy values for now\n    fetch('./dummy.csv')\n      .then(response => {\n        if (response.status !== 200) return console.error(response.status);\n        response.text().then(data => {\n          // This adds numClasses, classSize, teacherNames, categories,\n          //   students, studentNames and lists to the state\n          const parsed = parseCSVSpreadsheet(data);\n          const lists = generateRandomInitialList(\n            parsed.studentNames, parsed.numClasses\n          );\n          this.setState({ ...parsed, lists });\n        })\n      }).catch(console.log);\n  }\n  toggleState (newState) {\n    if (this.state.state !== newState)\n      this.setState({ state: newState });\n    else\n      this.setState({ state: 'import' });\n  }\n  editStudent (student_idx) {\n    // open modal to edit student information\n    this.setState({editingStudent: student_idx});\n  }\n  render () {\n    const { classes } = this.props;\n    return (\n      <Box className={classes.root}>\n        {this.state.teacherNames.length ? (\n          <ColumnList\n            teachers={this.state.teacherNames}\n            students={this.state.students}\n            categories={this.state.categories}\n            lists={this.state.lists}\n            state={this.state.state}\n            editStudent={this.editStudent.bind(this)}\n          />\n        ) : (\n          <Box className={classes.fallback}>\n            Please &nbsp;\n            <Button onClick={this.import.bind(this)}\n              size='large' color='primary' variant='contained'>\n              import\n            </Button>\n            &nbsp; a spreadsheet\n          </Box>\n        )}\n        <Header\n          import={this.import.bind(this)}\n          export={() => {}}\n          openListManager={() => {}}\n          toggleState={this.toggleState.bind(this)}\n          save={() => {}}\n          restart={() => this.setState({ lists: generateRandomInitialList(\n            this.state.studentNames, this.state.numClasses\n          )})}\n          state={this.state.state}\n          showOptions={this.state.teacherNames.length > 0}\n        />\n        {this.state.editingStudent < 0 ? null : (\n          <EditStudentDialog student_idx={this.state.editingStudent}\n            teachers={this.state.teacherNames}\n            students={this.state.students}\n            categories={this.state.categories}\n            updateStudent={student => {\n              const students = this.state.students;\n              students[this.state.editingStudent] = student;\n              this.setState({ students, editingStudent: -1 });\n            }}\n          />\n        )}\n      </Box>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// Progressive web app stuff (read https://bit.ly/CRA-PWA)\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}